I"Ø<p><a name="assembly"></a></p>
<h1 id="microsoftvisualstudioextensibility">Microsoft.VisualStudio.Extensibility</h1>

<h2 id="contents">Contents</h2>

<ul>
  <li><a href="#T-System-Diagnostics-CodeAnalysis-AllowNullAttribute" title="System.Diagnostics.CodeAnalysis.AllowNullAttribute">AllowNullAttribute</a>
    <ul>
      <li><a href="#M-System-Diagnostics-CodeAnalysis-AllowNullAttribute-#ctor" title="System.Diagnostics.CodeAnalysis.AllowNullAttribute.#ctor">#ctor()</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-Command" title="Microsoft.VisualStudio.Extensibility.Commands.Command">Command</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-Command-#ctor-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility,System-UInt16-" title="Microsoft.VisualStudio.Extensibility.Commands.Command.#ctor(Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility,System.UInt16)">#ctor(extensibility,id)</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-Command-BaseDefinitionId" title="Microsoft.VisualStudio.Extensibility.Commands.Command.BaseDefinitionId">BaseDefinitionId</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-Command-DisableDuringExecution" title="Microsoft.VisualStudio.Extensibility.Commands.Command.DisableDuringExecution">DisableDuringExecution</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-Command-DisplayName" title="Microsoft.VisualStudio.Extensibility.Commands.Command.DisplayName">DisplayName</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-Command-Extensibility" title="Microsoft.VisualStudio.Extensibility.Commands.Command.Extensibility">Extensibility</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-Command-ExecuteCommandAsync-System-Collections-Generic-IReadOnlyDictionary{System-String,System-Object},System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Commands.Command.ExecuteCommandAsync(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">ExecuteCommandAsync()</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-Command-ExecuteCommandAsync-Microsoft-VisualStudio-Extensibility-Definitions-IClientContext,System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Commands.Command.ExecuteCommandAsync(Microsoft.VisualStudio.Extensibility.Definitions.IClientContext,System.Threading.CancellationToken)">ExecuteCommandAsync(context,cancellationToken)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-Command-InitializeAsync-System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Commands.Command.InitializeAsync(System.Threading.CancellationToken)">InitializeAsync(cancellationToken)</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute" title="Microsoft.VisualStudio.Extensibility.Commands.CommandAttribute">CommandAttribute</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute-#ctor-System-String,System-UInt16,System-String,System-Type,Microsoft-VisualStudio-Extensibility-Commands-KnownCommandPlacement,System-String-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandAttribute.#ctor(System.String,System.UInt16,System.String,System.Type,Microsoft.VisualStudio.Extensibility.Commands.KnownCommandPlacement,System.String)">#ctor(name,id,displayName,containerType,placement,clientContexts)</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute-ClientContexts" title="Microsoft.VisualStudio.Extensibility.Commands.CommandAttribute.ClientContexts">ClientContexts</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute-ContainerType" title="Microsoft.VisualStudio.Extensibility.Commands.CommandAttribute.ContainerType">ContainerType</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute-DisplayName" title="Microsoft.VisualStudio.Extensibility.Commands.CommandAttribute.DisplayName">DisplayName</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute-Id" title="Microsoft.VisualStudio.Extensibility.Commands.CommandAttribute.Id">Id</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute-Name" title="Microsoft.VisualStudio.Extensibility.Commands.CommandAttribute.Name">Name</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute-Placement" title="Microsoft.VisualStudio.Extensibility.Commands.CommandAttribute.Placement">Placement</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandEnabledWhenAttribute" title="Microsoft.VisualStudio.Extensibility.Commands.CommandEnabledWhenAttribute">CommandEnabledWhenAttribute</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandEnabledWhenAttribute-#ctor-System-String,System-String[],System-String[]-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandEnabledWhenAttribute.#ctor(System.String,System.String[],System.String[])">#ctor(expression,termNames,termValues)</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandHandlerAsync" title="Microsoft.VisualStudio.Extensibility.Commands.CommandHandlerAsync">CommandHandlerAsync</a></li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandIconAttribute" title="Microsoft.VisualStudio.Extensibility.Commands.CommandIconAttribute">CommandIconAttribute</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandIconAttribute-#ctor-System-String,Microsoft-VisualStudio-Extensibility-Commands-IconSettings-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandIconAttribute.#ctor(System.String,Microsoft.VisualStudio.Extensibility.Commands.IconSettings)">#ctor(imageMoniker,iconSettings)</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-CommandIconAttribute-Icon" title="Microsoft.VisualStudio.Extensibility.Commands.CommandIconAttribute.Icon">Icon</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-CommandIconAttribute-IconSettings" title="Microsoft.VisualStudio.Extensibility.Commands.CommandIconAttribute.IconSettings">IconSettings</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase">CommandSetBase</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-#ctor-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility,Microsoft-VisualStudio-Extensibility-Extension,System-IServiceProvider,Microsoft-VisualStudio-Extensibility-Commands-ICommandSetFactory-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase.#ctor(Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility,Microsoft.VisualStudio.Extensibility.Extension,System.IServiceProvider,Microsoft.VisualStudio.Extensibility.Commands.ICommandSetFactory)">#ctor(extensibility,container,serviceProvider,commandSetFactory)</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-Item-System-String-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase.Item(System.String)">Item</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-Microsoft#VisualStudio#Extensibility#Commands#ICommandSet#Commands" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase.Microsoft#VisualStudio#Extensibility#Commands#ICommandSet#Commands">Microsoft#VisualStudio#Extensibility#Commands#ICommandSet#Commands</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-Dispose-System-Boolean-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase.Dispose(System.Boolean)">Dispose()</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-InitializeAsync-Microsoft-ServiceHub-Framework-IServiceBroker,System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase.InitializeAsync(Microsoft.ServiceHub.Framework.IServiceBroker,System.Threading.CancellationToken)">InitializeAsync()</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-RegisterCommand-System-String,System-UInt16,Microsoft-VisualStudio-Extensibility-Commands-CommandHandlerAsync-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase.RegisterCommand(System.String,System.UInt16,Microsoft.VisualStudio.Extensibility.Commands.CommandHandlerAsync)">RegisterCommand(commandName,commandId,commandHandler)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-RegisterCommand-Microsoft-VisualStudio-Extensibility-Commands-ICommand-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase.RegisterCommand(Microsoft.VisualStudio.Extensibility.Commands.ICommand)">RegisterCommand(command)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-RegisterCommandAsync-System-Type-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase.RegisterCommandAsync(System.Type)">RegisterCommandAsync(commandType)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-RegisterCommandAsync``1" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase.RegisterCommandAsync``1">RegisterCommandAsync``1()</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandSetFactory" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetFactory">CommandSetFactory</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetFactory-#ctor-System-IServiceProvider-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetFactory.#ctor(System.IServiceProvider)">#ctor(serviceProvider)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetFactory-#ctor-System-IServiceProvider,Microsoft-VisualStudio-Extensibility-Commands-ExtensionWithCommands-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetFactory.#ctor(System.IServiceProvider,Microsoft.VisualStudio.Extensibility.Commands.ExtensionWithCommands)">#ctor(serviceProvider,container)</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-CommandSetFactory-ServiceMoniker" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetFactory.ServiceMoniker">ServiceMoniker</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetFactory-CreateAsync-Microsoft-ServiceHub-Framework-ServiceMoniker,Microsoft-ServiceHub-Framework-ServiceActivationOptions,System-IServiceProvider,System-Type,System-Type-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetFactory.CreateAsync(Microsoft.ServiceHub.Framework.ServiceMoniker,Microsoft.ServiceHub.Framework.ServiceActivationOptions,System.IServiceProvider,System.Type,System.Type)">CreateAsync()</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetFactory-GetServiceDescriptor-Microsoft-ServiceHub-Framework-ServiceMoniker-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetFactory.GetServiceDescriptor(Microsoft.ServiceHub.Framework.ServiceMoniker)">GetServiceDescriptor()</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetFactory-InitializeCommandsAsync-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetFactory.InitializeCommandsAsync(Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase)">InitializeCommandsAsync(commandSet)</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetProvider">CommandSetProvider</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider-#ctor-Microsoft-VisualStudio-RpcContracts-Commands-IUpdateReceiver,Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility,Microsoft-VisualStudio-Extensibility-Extension,System-Func{Microsoft-VisualStudio-Extensibility-Commands-ICommandSet}-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetProvider.#ctor(Microsoft.VisualStudio.RpcContracts.Commands.IUpdateReceiver,Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility,Microsoft.VisualStudio.Extensibility.Extension,System.Func{Microsoft.VisualStudio.Extensibility.Commands.ICommandSet})">#ctor(updateReceiver,extensibility,container,commandSetCreator)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider-ActivateCommandSetAsync-System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetProvider.ActivateCommandSetAsync(System.Threading.CancellationToken)">ActivateCommandSetAsync()</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider-CreateFactoryAsync-Microsoft-ServiceHub-Framework-ServiceActivationOptions,Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility,Microsoft-VisualStudio-Extensibility-Extension,System-Func{Microsoft-VisualStudio-Extensibility-Commands-ICommandSet},System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetProvider.CreateFactoryAsync(Microsoft.ServiceHub.Framework.ServiceActivationOptions,Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility,Microsoft.VisualStudio.Extensibility.Extension,System.Func{Microsoft.VisualStudio.Extensibility.Commands.ICommandSet},System.Threading.CancellationToken)">CreateFactoryAsync(options,extensibility,container,commandSetCreator,cancellationToken)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider-CreateFactoryAsync``1-Microsoft-ServiceHub-Framework-ServiceActivationOptions,Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility,Microsoft-VisualStudio-Extensibility-Extension,System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetProvider.CreateFactoryAsync``1(Microsoft.ServiceHub.Framework.ServiceActivationOptions,Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility,Microsoft.VisualStudio.Extensibility.Extension,System.Threading.CancellationToken)">CreateFactoryAsync``1(options,extensibility,container,cancellationToken)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider-DeactivateCommandSetAsync-System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetProvider.DeactivateCommandSetAsync(System.Threading.CancellationToken)">DeactivateCommandSetAsync()</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider-Dispose-System-Boolean-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetProvider.Dispose(System.Boolean)">Dispose(disposing)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider-ExecuteCommandAsync-System-UInt16,System-Collections-Generic-IReadOnlyDictionary{System-String,System-Object},System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetProvider.ExecuteCommandAsync(System.UInt16,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">ExecuteCommandAsync()</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandVisibleWhenAttribute" title="Microsoft.VisualStudio.Extensibility.Commands.CommandVisibleWhenAttribute">CommandVisibleWhenAttribute</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandVisibleWhenAttribute-#ctor-System-String,System-String[],System-String[]-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandVisibleWhenAttribute.#ctor(System.String,System.String[],System.String[])">#ctor(expression,termNames,termValues)</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandWithHandler" title="Microsoft.VisualStudio.Extensibility.Commands.CommandWithHandler">CommandWithHandler</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandWithHandler-#ctor-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility,System-UInt16,Microsoft-VisualStudio-Extensibility-Commands-CommandHandlerAsync-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandWithHandler.#ctor(Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility,System.UInt16,Microsoft.VisualStudio.Extensibility.Commands.CommandHandlerAsync)">#ctor(extensibility,id,handler)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandWithHandler-ExecuteCommandAsync-Microsoft-VisualStudio-Extensibility-Definitions-IClientContext,System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandWithHandler.ExecuteCommandAsync(Microsoft.VisualStudio.Extensibility.Definitions.IClientContext,System.Threading.CancellationToken)">ExecuteCommandAsync(context,cancellationToken)</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandsPackageAttribute" title="Microsoft.VisualStudio.Extensibility.Commands.CommandsPackageAttribute">CommandsPackageAttribute</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandsPackageAttribute-#ctor-System-String,System-String-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandsPackageAttribute.#ctor(System.String,System.String)">#ctor(serviceName,versionString)</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-CommandsPackageAttribute-ServiceMoniker" title="Microsoft.VisualStudio.Extensibility.Commands.CommandsPackageAttribute.ServiceMoniker">ServiceMoniker</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandsPackageLoadAttribute" title="Microsoft.VisualStudio.Extensibility.Commands.CommandsPackageLoadAttribute">CommandsPackageLoadAttribute</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-CommandsPackageLoadAttribute-#ctor-System-String,System-String[],System-String[]-" title="Microsoft.VisualStudio.Extensibility.Commands.CommandsPackageLoadAttribute.#ctor(System.String,System.String[],System.String[])">#ctor(expression,termNames,termValues)</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-DiagnosticsExtensionMethods" title="Microsoft.VisualStudio.Extensibility.DiagnosticsExtensionMethods">DiagnosticsExtensionMethods</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-DiagnosticsExtensionMethods-GetDiagnosticsProvider-Microsoft-VisualStudio-Extensibility-Documents-LanguagesExtensibility,System-String-" title="Microsoft.VisualStudio.Extensibility.DiagnosticsExtensionMethods.GetDiagnosticsProvider(Microsoft.VisualStudio.Extensibility.Documents.LanguagesExtensibility,System.String)">GetDiagnosticsProvider(extensibilityPoint,generatorId)</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider" title="Microsoft.VisualStudio.Extensibility.Documents.DiagnosticsProvider">DiagnosticsProvider</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider-#ctor-System-String,Microsoft-VisualStudio-Extensibility-ExtensibilityPoint-" title="Microsoft.VisualStudio.Extensibility.Documents.DiagnosticsProvider.#ctor(System.String,Microsoft.VisualStudio.Extensibility.ExtensibilityPoint)">#ctor(generatorId,extensibilityPoint)</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider-GeneratorId" title="Microsoft.VisualStudio.Extensibility.Documents.DiagnosticsProvider.GeneratorId">GeneratorId</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider-AppendDiagnosticsAsync-Microsoft-VisualStudio-Extensibility-Editor-Data-ITextDocument,System-Collections-Generic-IEnumerable{Microsoft-VisualStudio-RpcContracts-DiagnosticManagement-Diagnostic},System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Documents.DiagnosticsProvider.AppendDiagnosticsAsync(Microsoft.VisualStudio.Extensibility.Editor.Data.ITextDocument,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.RpcContracts.DiagnosticManagement.Diagnostic},System.Threading.CancellationToken)">AppendDiagnosticsAsync(textDocument,diagnostics,cancellationToken)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider-AppendDiagnosticsAsync-System-Uri,System-Collections-Generic-IEnumerable{Microsoft-VisualStudio-RpcContracts-DiagnosticManagement-Diagnostic},System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Documents.DiagnosticsProvider.AppendDiagnosticsAsync(System.Uri,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.RpcContracts.DiagnosticManagement.Diagnostic},System.Threading.CancellationToken)">AppendDiagnosticsAsync(documentMoniker,diagnostics,cancellationToken)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider-AppendDiagnosticsAsync-System-Uri,System-Int32,System-Collections-Generic-IEnumerable{Microsoft-VisualStudio-RpcContracts-DiagnosticManagement-Diagnostic},System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Documents.DiagnosticsProvider.AppendDiagnosticsAsync(System.Uri,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.RpcContracts.DiagnosticManagement.Diagnostic},System.Threading.CancellationToken)">AppendDiagnosticsAsync(documentMoniker,documentVersion,diagnostics,cancellationToken)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider-ClearDiagnosticsAsync-Microsoft-VisualStudio-Extensibility-Editor-Data-ITextDocument,System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Documents.DiagnosticsProvider.ClearDiagnosticsAsync(Microsoft.VisualStudio.Extensibility.Editor.Data.ITextDocument,System.Threading.CancellationToken)">ClearDiagnosticsAsync(textDocument,cancellationToken)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider-ClearDiagnosticsAsync-System-Uri,System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Documents.DiagnosticsProvider.ClearDiagnosticsAsync(System.Uri,System.Threading.CancellationToken)">ClearDiagnosticsAsync(documentMoniker,cancellationToken)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider-Dispose-System-Boolean-" title="Microsoft.VisualStudio.Extensibility.Documents.DiagnosticsProvider.Dispose(System.Boolean)">Dispose()</a></li>
    </ul>
  </li>
  <li><a href="#T-System-Diagnostics-CodeAnalysis-DisallowNullAttribute" title="System.Diagnostics.CodeAnalysis.DisallowNullAttribute">DisallowNullAttribute</a>
    <ul>
      <li><a href="#M-System-Diagnostics-CodeAnalysis-DisallowNullAttribute-#ctor" title="System.Diagnostics.CodeAnalysis.DisallowNullAttribute.#ctor">#ctor()</a></li>
    </ul>
  </li>
  <li><a href="#T-System-Diagnostics-CodeAnalysis-DoesNotReturnAttribute" title="System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">DoesNotReturnAttribute</a>
    <ul>
      <li><a href="#M-System-Diagnostics-CodeAnalysis-DoesNotReturnAttribute-#ctor" title="System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute.#ctor">#ctor()</a></li>
    </ul>
  </li>
  <li><a href="#T-System-Diagnostics-CodeAnalysis-DoesNotReturnIfAttribute" title="System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">DoesNotReturnIfAttribute</a>
    <ul>
      <li><a href="#M-System-Diagnostics-CodeAnalysis-DoesNotReturnIfAttribute-#ctor-System-Boolean-" title="System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">#ctor(parameterValue)</a></li>
      <li><a href="#P-System-Diagnostics-CodeAnalysis-DoesNotReturnIfAttribute-ParameterValue" title="System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">ParameterValue</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand" title="Microsoft.VisualStudio.Extensibility.Commands.ExecutableCommand">ExecutableCommand</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-#ctor-System-UInt16-" title="Microsoft.VisualStudio.Extensibility.Commands.ExecutableCommand.#ctor(System.UInt16)">#ctor(id)</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-Id" title="Microsoft.VisualStudio.Extensibility.Commands.ExecutableCommand.Id">Id</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-IsDisposed" title="Microsoft.VisualStudio.Extensibility.Commands.ExecutableCommand.IsDisposed">IsDisposed</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-IsEnabled" title="Microsoft.VisualStudio.Extensibility.Commands.ExecutableCommand.IsEnabled">IsEnabled</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-Dispose" title="Microsoft.VisualStudio.Extensibility.Commands.ExecutableCommand.Dispose">Dispose()</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-Dispose-System-Boolean-" title="Microsoft.VisualStudio.Extensibility.Commands.ExecutableCommand.Dispose(System.Boolean)">Dispose(disposing)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-ExecuteCommandAsync-System-Collections-Generic-IReadOnlyDictionary{System-String,System-Object},System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Commands.ExecutableCommand.ExecuteCommandAsync(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">ExecuteCommandAsync()</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-IsValidId-System-UInt16-" title="Microsoft.VisualStudio.Extensibility.Commands.ExecutableCommand.IsValidId(System.UInt16)">IsValidId(id)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-OnPropertyChanged-System-ComponentModel-PropertyChangedEventArgs-" title="Microsoft.VisualStudio.Extensibility.Commands.ExecutableCommand.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">OnPropertyChanged(eventArgs)</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-ExtensibilityPoints" title="Microsoft.VisualStudio.Extensibility.ExtensibilityPoints">ExtensibilityPoints</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-ExtensibilityPoints-Languages-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility-" title="Microsoft.VisualStudio.Extensibility.ExtensibilityPoints.Languages(Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility)">Languages(extensibility)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-ExtensibilityPoints-Views-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility-" title="Microsoft.VisualStudio.Extensibility.ExtensibilityPoints.Views(Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility)">Views(extensibility)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-ExtensibilityPoints-Workspaces-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility-" title="Microsoft.VisualStudio.Extensibility.ExtensibilityPoints.Workspaces(Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility)">Workspaces(extensibility)</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Extension" title="Microsoft.VisualStudio.Extensibility.Extension">Extension</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Extension-InitializeServices-Microsoft-Extensions-DependencyInjection-IServiceCollection-" title="Microsoft.VisualStudio.Extensibility.Extension.InitializeServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">InitializeServices()</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-ExtensionMethods" title="Microsoft.VisualStudio.Extensibility.ExtensionMethods">ExtensionMethods</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-ExtensionMethods-GetActiveTextViewAsync-Microsoft-VisualStudio-Extensibility-Definitions-IClientContext,System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.ExtensionMethods.GetActiveTextViewAsync(Microsoft.VisualStudio.Extensibility.Definitions.IClientContext,System.Threading.CancellationToken)">GetActiveTextViewAsync(clientContext,cancellationToken)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-ExtensionMethods-GetSelectedPathAsync-Microsoft-VisualStudio-Extensibility-Definitions-IClientContext,System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.ExtensionMethods.GetSelectedPathAsync(Microsoft.VisualStudio.Extensibility.Definitions.IClientContext,System.Threading.CancellationToken)">GetSelectedPathAsync(clientContext,cancellationToken)</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-ExtensionWithCommands" title="Microsoft.VisualStudio.Extensibility.Commands.ExtensionWithCommands">ExtensionWithCommands</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-ExtensionWithCommands-#ctor" title="Microsoft.VisualStudio.Extensibility.Commands.ExtensionWithCommands.#ctor">#ctor()</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-ExtensionWithCommands-ServiceMoniker" title="Microsoft.VisualStudio.Extensibility.Commands.ExtensionWithCommands.ServiceMoniker">ServiceMoniker</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-ExtensionWithCommands-CreateAsync-Microsoft-ServiceHub-Framework-ServiceMoniker,Microsoft-ServiceHub-Framework-ServiceActivationOptions,System-IServiceProvider,System-Type,System-Type-" title="Microsoft.VisualStudio.Extensibility.Commands.ExtensionWithCommands.CreateAsync(Microsoft.ServiceHub.Framework.ServiceMoniker,Microsoft.ServiceHub.Framework.ServiceActivationOptions,System.IServiceProvider,System.Type,System.Type)">CreateAsync()</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-ExtensionWithCommands-GetServiceDescriptor-Microsoft-ServiceHub-Framework-ServiceMoniker-" title="Microsoft.VisualStudio.Extensibility.Commands.ExtensionWithCommands.GetServiceDescriptor(Microsoft.ServiceHub.Framework.ServiceMoniker)">GetServiceDescriptor()</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-ExtensionWithCommands-InitializeCommandsAsync-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-" title="Microsoft.VisualStudio.Extensibility.Commands.ExtensionWithCommands.InitializeCommandsAsync(Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase)">InitializeCommandsAsync(commandSet)</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-ICommand" title="Microsoft.VisualStudio.Extensibility.Commands.ICommand">ICommand</a>
    <ul>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-ICommand-Id" title="Microsoft.VisualStudio.Extensibility.Commands.ICommand.Id">Id</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-ICommandSet" title="Microsoft.VisualStudio.Extensibility.Commands.ICommandSet">ICommandSet</a>
    <ul>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-ICommandSet-Commands" title="Microsoft.VisualStudio.Extensibility.Commands.ICommandSet.Commands">Commands</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-ICommandSet-InitializeAsync-Microsoft-ServiceHub-Framework-IServiceBroker,System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Commands.ICommandSet.InitializeAsync(Microsoft.ServiceHub.Framework.IServiceBroker,System.Threading.CancellationToken)">InitializeAsync(serviceBroker,cancellationToken)</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-ICommandSetFactory" title="Microsoft.VisualStudio.Extensibility.Commands.ICommandSetFactory">ICommandSetFactory</a>
    <ul>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-ICommandSetFactory-ServiceMoniker" title="Microsoft.VisualStudio.Extensibility.Commands.ICommandSetFactory.ServiceMoniker">ServiceMoniker</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-ICommandSetFactory-InitializeCommandsAsync-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-" title="Microsoft.VisualStudio.Extensibility.Commands.ICommandSetFactory.InitializeCommandsAsync(Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase)">InitializeCommandsAsync(commandSet)</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-IDynamicCommand" title="Microsoft.VisualStudio.Extensibility.Commands.IDynamicCommand">IDynamicCommand</a>
    <ul>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-IDynamicCommand-BaseDefinitionId" title="Microsoft.VisualStudio.Extensibility.Commands.IDynamicCommand.BaseDefinitionId">BaseDefinitionId</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-IDynamicCommand-DisplayName" title="Microsoft.VisualStudio.Extensibility.Commands.IDynamicCommand.DisplayName">DisplayName</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-IExecutableCommand" title="Microsoft.VisualStudio.Extensibility.Commands.IExecutableCommand">IExecutableCommand</a>
    <ul>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-IExecutableCommand-IsEnabled" title="Microsoft.VisualStudio.Extensibility.Commands.IExecutableCommand.IsEnabled">IsEnabled</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-IExecutableCommand-ExecuteCommandAsync-System-Collections-Generic-IReadOnlyDictionary{System-String,System-Object},System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Commands.IExecutableCommand.ExecuteCommandAsync(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">ExecuteCommandAsync(contextProperties,cancellationToken)</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-IToggleCommand" title="Microsoft.VisualStudio.Extensibility.Commands.IToggleCommand">IToggleCommand</a>
    <ul>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-IToggleCommand-IsChecked" title="Microsoft.VisualStudio.Extensibility.Commands.IToggleCommand.IsChecked">IsChecked</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-IconSettings" title="Microsoft.VisualStudio.Extensibility.Commands.IconSettings">IconSettings</a>
    <ul>
      <li><a href="#F-Microsoft-VisualStudio-Extensibility-Commands-IconSettings-IconAndText" title="Microsoft.VisualStudio.Extensibility.Commands.IconSettings.IconAndText">IconAndText</a></li>
      <li><a href="#F-Microsoft-VisualStudio-Extensibility-Commands-IconSettings-IconOnly" title="Microsoft.VisualStudio.Extensibility.Commands.IconSettings.IconOnly">IconOnly</a></li>
      <li><a href="#F-Microsoft-VisualStudio-Extensibility-Commands-IconSettings-None" title="Microsoft.VisualStudio.Extensibility.Commands.IconSettings.None">None</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-KnownCommandPlacement" title="Microsoft.VisualStudio.Extensibility.Commands.KnownCommandPlacement">KnownCommandPlacement</a>
    <ul>
      <li><a href="#F-Microsoft-VisualStudio-Extensibility-Commands-KnownCommandPlacement-ExtensionsMenu" title="Microsoft.VisualStudio.Extensibility.Commands.KnownCommandPlacement.ExtensionsMenu">ExtensionsMenu</a></li>
      <li><a href="#F-Microsoft-VisualStudio-Extensibility-Commands-KnownCommandPlacement-None" title="Microsoft.VisualStudio.Extensibility.Commands.KnownCommandPlacement.None">None</a></li>
      <li><a href="#F-Microsoft-VisualStudio-Extensibility-Commands-KnownCommandPlacement-ToolsMenu" title="Microsoft.VisualStudio.Extensibility.Commands.KnownCommandPlacement.ToolsMenu">ToolsMenu</a></li>
      <li><a href="#F-Microsoft-VisualStudio-Extensibility-Commands-KnownCommandPlacement-ViewOtherWindowsMenu" title="Microsoft.VisualStudio.Extensibility.Commands.KnownCommandPlacement.ViewOtherWindowsMenu">ViewOtherWindowsMenu</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Documents-LanguagesExtensibility" title="Microsoft.VisualStudio.Extensibility.Documents.LanguagesExtensibility">LanguagesExtensibility</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-LanguagesExtensibility-#ctor-Microsoft-VisualStudio-Extensibility-ExtensibilityPoint-" title="Microsoft.VisualStudio.Extensibility.Documents.LanguagesExtensibility.#ctor(Microsoft.VisualStudio.Extensibility.ExtensibilityPoint)">#ctor(extensibilityPoint)</a></li>
    </ul>
  </li>
  <li><a href="#T-System-Diagnostics-CodeAnalysis-MaybeNullAttribute" title="System.Diagnostics.CodeAnalysis.MaybeNullAttribute">MaybeNullAttribute</a>
    <ul>
      <li><a href="#M-System-Diagnostics-CodeAnalysis-MaybeNullAttribute-#ctor" title="System.Diagnostics.CodeAnalysis.MaybeNullAttribute.#ctor">#ctor()</a></li>
    </ul>
  </li>
  <li><a href="#T-System-Diagnostics-CodeAnalysis-MaybeNullWhenAttribute" title="System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">MaybeNullWhenAttribute</a>
    <ul>
      <li><a href="#M-System-Diagnostics-CodeAnalysis-MaybeNullWhenAttribute-#ctor-System-Boolean-" title="System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">#ctor(returnValue)</a></li>
      <li><a href="#P-System-Diagnostics-CodeAnalysis-MaybeNullWhenAttribute-ReturnValue" title="System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">ReturnValue</a></li>
    </ul>
  </li>
  <li><a href="#T-System-Diagnostics-CodeAnalysis-NotNullAttribute" title="System.Diagnostics.CodeAnalysis.NotNullAttribute">NotNullAttribute</a>
    <ul>
      <li><a href="#M-System-Diagnostics-CodeAnalysis-NotNullAttribute-#ctor" title="System.Diagnostics.CodeAnalysis.NotNullAttribute.#ctor">#ctor()</a></li>
    </ul>
  </li>
  <li><a href="#T-System-Diagnostics-CodeAnalysis-NotNullIfNotNullAttribute" title="System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">NotNullIfNotNullAttribute</a>
    <ul>
      <li><a href="#M-System-Diagnostics-CodeAnalysis-NotNullIfNotNullAttribute-#ctor-System-String-" title="System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">#ctor(parameterName)</a></li>
      <li><a href="#P-System-Diagnostics-CodeAnalysis-NotNullIfNotNullAttribute-ParameterName" title="System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">ParameterName</a></li>
    </ul>
  </li>
  <li><a href="#T-System-Diagnostics-CodeAnalysis-NotNullWhenAttribute" title="System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">NotNullWhenAttribute</a>
    <ul>
      <li><a href="#M-System-Diagnostics-CodeAnalysis-NotNullWhenAttribute-#ctor-System-Boolean-" title="System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">#ctor(returnValue)</a></li>
      <li><a href="#P-System-Diagnostics-CodeAnalysis-NotNullWhenAttribute-ReturnValue" title="System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">ReturnValue</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Documents-OutputWindow" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindow">OutputWindow</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindow-#ctor-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal-" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindow.#ctor(Microsoft.VisualStudio.Extensibility.Documents.OutputWindowInternal)">#ctor(outputWindow)</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Documents-OutputWindow-Writer" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindow.Writer">Writer</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindow-DisposeNativeResources" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindow.DisposeNativeResources">DisposeNativeResources()</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowExtensibility" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowExtensibility">OutputWindowExtensibility</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowExtensibility-#ctor-Microsoft-VisualStudio-Extensibility-ExtensibilityPoint-" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowExtensibility.#ctor(Microsoft.VisualStudio.Extensibility.ExtensibilityPoint)">#ctor(extensibilityPoint)</a></li>
      <li><a href="#F-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowExtensibility-outputWindowChannels" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowExtensibility.outputWindowChannels">outputWindowChannels</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowExtensibility-Dispose-System-Boolean-" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowExtensibility.Dispose(System.Boolean)">Dispose()</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowExtensibility-GetChannelAsync-System-String,System-String,System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowExtensibility.GetChannelAsync(System.String,System.String,System.Threading.CancellationToken)">GetChannelAsync(identifier,displayNameResourceId,cancellationToken)</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowInternal">OutputWindowInternal</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal-#ctor-System-String,System-IO-Pipelines-PipeWriter,System-Text-Encoding,Microsoft-VisualStudio-RpcContracts-OutputChannel-IOutputChannelStore,Microsoft-ServiceHub-Framework-IServiceBroker-" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowInternal.#ctor(System.String,System.IO.Pipelines.PipeWriter,System.Text.Encoding,Microsoft.VisualStudio.RpcContracts.OutputChannel.IOutputChannelStore,Microsoft.ServiceHub.Framework.IServiceBroker)">#ctor(identifier,writer,encoding,outputChannelStore,serviceBroker)</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal-Identifier" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowInternal.Identifier">Identifier</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal-Writer" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowInternal.Writer">Writer</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal-CreateChannelAsync-System-String,System-String,System-Text-Encoding,Microsoft-ServiceHub-Framework-IServiceBroker,Microsoft-VisualStudio-RpcContracts-IStringResourceDictionary,System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowInternal.CreateChannelAsync(System.String,System.String,System.Text.Encoding,Microsoft.ServiceHub.Framework.IServiceBroker,Microsoft.VisualStudio.RpcContracts.IStringResourceDictionary,System.Threading.CancellationToken)">CreateChannelAsync(identifier,resourceId,encoding,serviceBroker,stringResourceDictionary,cancellationToken)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal-DisposeManagedResources" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowInternal.DisposeManagedResources">DisposeManagedResources()</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal-ReleaseReference" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowInternal.ReleaseReference">ReleaseReference()</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal-TryAddReference" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowInternal.TryAddReference">TryAddReference()</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Resources" title="Microsoft.VisualStudio.Extensibility.Resources">Resources</a>
    <ul>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Resources-CommandIdAlreadyRegistered" title="Microsoft.VisualStudio.Extensibility.Resources.CommandIdAlreadyRegistered">CommandIdAlreadyRegistered</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Resources-Culture" title="Microsoft.VisualStudio.Extensibility.Resources.Culture">Culture</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Resources-InvalidVersionString" title="Microsoft.VisualStudio.Extensibility.Resources.InvalidVersionString">InvalidVersionString</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Resources-ResourceManager" title="Microsoft.VisualStudio.Extensibility.Resources.ResourceManager">ResourceManager</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Resources-UnsupportedDocumentMoniker" title="Microsoft.VisualStudio.Extensibility.Resources.UnsupportedDocumentMoniker">UnsupportedDocumentMoniker</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Documents-SynchronizedBufferTextWriter" title="Microsoft.VisualStudio.Extensibility.Documents.SynchronizedBufferTextWriter">SynchronizedBufferTextWriter</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-SynchronizedBufferTextWriter-#ctor-System-IO-Pipelines-PipeWriter,System-Text-Encoding-" title="Microsoft.VisualStudio.Extensibility.Documents.SynchronizedBufferTextWriter.#ctor(System.IO.Pipelines.PipeWriter,System.Text.Encoding)">#ctor(pipeWriter,encoding)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-SynchronizedBufferTextWriter-Dispose-System-Boolean-" title="Microsoft.VisualStudio.Extensibility.Documents.SynchronizedBufferTextWriter.Dispose(System.Boolean)">Dispose()</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-SynchronizedBufferTextWriter-Write-System-ReadOnlySpan{System-Char}-" title="Microsoft.VisualStudio.Extensibility.Documents.SynchronizedBufferTextWriter.Write(System.ReadOnlySpan{System.Char})">Write()</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-SynchronizedBufferTextWriter-WriteLine-System-ReadOnlySpan{System-Char}-" title="Microsoft.VisualStudio.Extensibility.Documents.SynchronizedBufferTextWriter.WriteLine(System.ReadOnlySpan{System.Char})">WriteLine()</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-ToggleCommand" title="Microsoft.VisualStudio.Extensibility.Commands.ToggleCommand">ToggleCommand</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Commands-ToggleCommand-#ctor-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility,System-UInt16-" title="Microsoft.VisualStudio.Extensibility.Commands.ToggleCommand.#ctor(Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility,System.UInt16)">#ctor(extensibility,id)</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Commands-ToggleCommand-IsChecked" title="Microsoft.VisualStudio.Extensibility.Commands.ToggleCommand.IsChecked">IsChecked</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Documents-ViewsExtensibility" title="Microsoft.VisualStudio.Extensibility.Documents.ViewsExtensibility">ViewsExtensibility</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Documents-ViewsExtensibility-#ctor-Microsoft-VisualStudio-Extensibility-ExtensibilityPoint-" title="Microsoft.VisualStudio.Extensibility.Documents.ViewsExtensibility.#ctor(Microsoft.VisualStudio.Extensibility.ExtensibilityPoint)">#ctor(extensibilityPoint)</a></li>
      <li><a href="#P-Microsoft-VisualStudio-Extensibility-Documents-ViewsExtensibility-Output" title="Microsoft.VisualStudio.Extensibility.Documents.ViewsExtensibility.Output">Output</a></li>
    </ul>
  </li>
  <li><a href="#T-Microsoft-VisualStudio-Extensibility-Workspaces-WorkspacesExtensibility" title="Microsoft.VisualStudio.Extensibility.Workspaces.WorkspacesExtensibility">WorkspacesExtensibility</a>
    <ul>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Workspaces-WorkspacesExtensibility-#ctor-Microsoft-VisualStudio-Extensibility-ExtensibilityPoint-" title="Microsoft.VisualStudio.Extensibility.Workspaces.WorkspacesExtensibility.#ctor(Microsoft.VisualStudio.Extensibility.ExtensibilityPoint)">#ctor(extensibilityPoint)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Workspaces-WorkspacesExtensibility-QueryProjectsAsync``1-System-Func{Microsoft-VisualStudio-ProjectSystem-Query-IAsyncQueryable{Microsoft-VisualStudio-ProjectSystem-Query-ProjectModel-IProject},Microsoft-VisualStudio-ProjectSystem-Query-IAsyncQueryable{``0}},System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Workspaces.WorkspacesExtensibility.QueryProjectsAsync``1(System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{Microsoft.VisualStudio.ProjectSystem.Query.ProjectModel.IProject},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{``0}},System.Threading.CancellationToken)">QueryProjectsAsync``1(queryFunc,cancellationToken)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Workspaces-WorkspacesExtensibility-QuerySolutionAsync``1-System-Func{Microsoft-VisualStudio-ProjectSystem-Query-IAsyncQueryable{Microsoft-VisualStudio-ProjectSystem-Query-ProjectModel-ISolution},Microsoft-VisualStudio-ProjectSystem-Query-IAsyncQueryable{``0}},System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Workspaces.WorkspacesExtensibility.QuerySolutionAsync``1(System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{Microsoft.VisualStudio.ProjectSystem.Query.ProjectModel.ISolution},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{``0}},System.Threading.CancellationToken)">QuerySolutionAsync``1(queryFunc,cancellationToken)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Workspaces-WorkspacesExtensibility-UpdateProjectsAsync``2-System-Func{Microsoft-VisualStudio-ProjectSystem-Query-IAsyncQueryable{Microsoft-VisualStudio-ProjectSystem-Query-ProjectModel-IProject},Microsoft-VisualStudio-ProjectSystem-Query-IAsyncQueryable{``0}},System-Func{Microsoft-VisualStudio-ProjectSystem-Query-IAsyncUpdatable{``0},Microsoft-VisualStudio-ProjectSystem-Query-IAsyncUpdatable{``1}},System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Workspaces.WorkspacesExtensibility.UpdateProjectsAsync``2(System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{Microsoft.VisualStudio.ProjectSystem.Query.ProjectModel.IProject},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{``0}},System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncUpdatable{``0},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncUpdatable{``1}},System.Threading.CancellationToken)">UpdateProjectsAsync``2(queryFunc,updateFunc,cancellationToken)</a></li>
      <li><a href="#M-Microsoft-VisualStudio-Extensibility-Workspaces-WorkspacesExtensibility-UpdateSolutionAsync``2-System-Func{Microsoft-VisualStudio-ProjectSystem-Query-IAsyncQueryable{Microsoft-VisualStudio-ProjectSystem-Query-ProjectModel-ISolution},Microsoft-VisualStudio-ProjectSystem-Query-IAsyncQueryable{``0}},System-Func{Microsoft-VisualStudio-ProjectSystem-Query-IAsyncUpdatable{``0},Microsoft-VisualStudio-ProjectSystem-Query-IAsyncUpdatable{``1}},System-Threading-CancellationToken-" title="Microsoft.VisualStudio.Extensibility.Workspaces.WorkspacesExtensibility.UpdateSolutionAsync``2(System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{Microsoft.VisualStudio.ProjectSystem.Query.ProjectModel.ISolution},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{``0}},System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncUpdatable{``0},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncUpdatable{``1}},System.Threading.CancellationToken)">UpdateSolutionAsync``2(queryFunc,updateFunc,cancellationToken)</a></li>
    </ul>
  </li>
</ul>

<p><a name="T-System-Diagnostics-CodeAnalysis-AllowNullAttribute"></a></p>
<h2 id="allownullattribute-type">AllowNullAttribute <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace">Namespace</h5>

<p>System.Diagnostics.CodeAnalysis</p>

<h5 id="summary">Summary</h5>

<p>Specifies that <code class="language-plaintext highlighter-rouge">null</code> is allowed as an input even if the
    corresponding type disallows it.</p>

<p><a name="M-System-Diagnostics-CodeAnalysis-AllowNullAttribute-#ctor"></a></p>
<h3 id="ctor-constructor">#ctor() <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-1">Summary</h5>

<p>Initializes a new instance of the <a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Diagnostics.CodeAnalysis.AllowNullAttribute" title="System.Diagnostics.CodeAnalysis.AllowNullAttribute">AllowNullAttribute</a> class.</p>

<h5 id="parameters">Parameters</h5>

<p>This constructor has no parameters.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-Command"></a></p>
<h2 id="command-type">Command <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-1">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-2">Summary</h5>

<p>Provides functionality for extending Visual Studio through brokered services.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-Command-#ctor-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility,System-UInt16-"></a></p>
<h3 id="ctorextensibilityid-constructor">#ctor(extensibility,id) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-3">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-Command" title="Microsoft.VisualStudio.Extensibility.Commands.Command">Command</a> class.</p>

<h5 id="parameters-1">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>extensibility</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility" title="Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility">Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility</a></td>
      <td>Extensibility point to be used for command execution.</td>
    </tr>
    <tr>
      <td>id</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.UInt16" title="System.UInt16">System.UInt16</a></td>
      <td>Command identifier.</td>
    </tr>
  </tbody>
</table>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-Command-BaseDefinitionId"></a></p>
<h3 id="basedefinitionid-property">BaseDefinitionId <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-4">Summary</h5>

<p><em>Inherit from parent.</em></p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-Command-DisableDuringExecution"></a></p>
<h3 id="disableduringexecution-property">DisableDuringExecution <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-5">Summary</h5>

<p>Gets or sets a value indicating whether command should be disabled when it is executing to avoid multiple invocations at the same time.</p>

<h5 id="remarks">Remarks</h5>

<p>By default, this is set to false so command state will not be modified during execution.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-Command-DisplayName"></a></p>
<h3 id="displayname-property">DisplayName <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-6">Summary</h5>

<p><em>Inherit from parent.</em></p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-Command-Extensibility"></a></p>
<h3 id="extensibility-property">Extensibility <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-7">Summary</h5>

<p>Gets the Visual Studio extensibility point.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-Command-ExecuteCommandAsync-System-Collections-Generic-IReadOnlyDictionary{System-String,System-Object},System-Threading-CancellationToken-"></a></p>
<h3 id="executecommandasync-method">ExecuteCommandAsync() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-8">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-2">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-Command-ExecuteCommandAsync-Microsoft-VisualStudio-Extensibility-Definitions-IClientContext,System-Threading-CancellationToken-"></a></p>
<h3 id="executecommandasynccontextcancellationtoken-method">ExecuteCommandAsync(context,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-9">Summary</h5>

<p>Raised when command is executed on the client.</p>

<h5 id="returns">Returns</h5>

<p>a Task indication completion.</p>

<h5 id="parameters-3">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>context</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Definitions-IClientContext" title="Microsoft.VisualStudio.Extensibility.Definitions.IClientContext">Microsoft.VisualStudio.Extensibility.Definitions.IClientContext</a></td>
      <td>Client context at the time of command execution.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>Cancellation token to monitor.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-Command-InitializeAsync-System-Threading-CancellationToken-"></a></p>
<h3 id="initializeasynccancellationtoken-method">InitializeAsync(cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-10">Summary</h5>

<p>Completes async initialization of command instance.</p>

<h5 id="returns-1">Returns</h5>

<p>Task indication completion of initialization.</p>

<h5 id="parameters-4">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>Cancellation token to monitor.</td>
    </tr>
  </tbody>
</table>

<h5 id="remarks-1">Remarks</h5>

<p>This method can be used to initialize values that can be retrieved asynchronously in addition to the constructor.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute"></a></p>
<h2 id="commandattribute-type">CommandAttribute <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-2">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-11">Summary</h5>

<p>An attribute used on Command classes to specify the command id (or name in future).</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute-#ctor-System-String,System-UInt16,System-String,System-Type,Microsoft-VisualStudio-Extensibility-Commands-KnownCommandPlacement,System-String-"></a></p>
<h3 id="ctornameiddisplaynamecontainertypeplacementclientcontexts-constructor">#ctor(name,id,displayName,containerType,placement,clientContexts) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-12">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute" title="Microsoft.VisualStudio.Extensibility.Commands.CommandAttribute">CommandAttribute</a> class.</p>

<h5 id="parameters-5">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>name</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>Command name.</td>
    </tr>
    <tr>
      <td>id</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.UInt16" title="System.UInt16">System.UInt16</a></td>
      <td>Command identifier.</td>
    </tr>
    <tr>
      <td>displayName</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>The default display name for the command.</td>
    </tr>
    <tr>
      <td>containerType</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Type" title="System.Type">System.Type</a></td>
      <td>Optional container type that should contain the command, this is used for automatic registration of commands. If left null command will be registered to default command set generated during compilation.</td>
    </tr>
    <tr>
      <td>placement</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-KnownCommandPlacement" title="Microsoft.VisualStudio.Extensibility.Commands.KnownCommandPlacement">Microsoft.VisualStudio.Extensibility.Commands.KnownCommandPlacement</a></td>
      <td>Where the command should be parented to in the IDE.</td>
    </tr>
    <tr>
      <td>clientContexts</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>Client contexts requested by the command, separated by â,â. By default only Shell context is returned.</td>
    </tr>
  </tbody>
</table>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute-ClientContexts"></a></p>
<h3 id="clientcontexts-property">ClientContexts <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-13">Summary</h5>

<p>Gets the client context categories requested by the command, separated by â,â.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute-ContainerType"></a></p>
<h3 id="containertype-property">ContainerType <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-14">Summary</h5>

<p>Gets the command container type if one is specified.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute-DisplayName"></a></p>
<h3 id="displayname-property-1">DisplayName <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-15">Summary</h5>

<p>Gets the initial command display name.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute-Id"></a></p>
<h3 id="id-property">Id <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-16">Summary</h5>

<p>Gets the command identifier.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute-Name"></a></p>
<h3 id="name-property">Name <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-17">Summary</h5>

<p>Gets the command name.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute-Placement"></a></p>
<h3 id="placement-property">Placement <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-18">Summary</h5>

<p>Gets where the command should be placed in the IDE.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-CommandEnabledWhenAttribute"></a></p>
<h2 id="commandenabledwhenattribute-type">CommandEnabledWhenAttribute <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-3">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-19">Summary</h5>

<p>An attribute used on Command classes to specify when the command should be enabled.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandEnabledWhenAttribute-#ctor-System-String,System-String[],System-String[]-"></a></p>
<h3 id="ctorexpressiontermnamestermvalues-constructor">#ctor(expression,termNames,termValues) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-20">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandEnabledWhenAttribute" title="Microsoft.VisualStudio.Extensibility.Commands.CommandEnabledWhenAttribute">CommandEnabledWhenAttribute</a> class.</p>

<h5 id="parameters-6">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>expression</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>Boolean expression string.</td>
    </tr>
    <tr>
      <td>termNames</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String[]" title="System.String[]">System.String[]</a></td>
      <td>Array of terms used in the expression.</td>
    </tr>
    <tr>
      <td>termValues</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String[]" title="System.String[]">System.String[]</a></td>
      <td>Values of each term in the same order as term names array.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-CommandHandlerAsync"></a></p>
<h2 id="commandhandlerasync-type">CommandHandlerAsync <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-4">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-21">Summary</h5>

<p>Async command execution handler.</p>

<h5 id="returns-2">Returns</h5>

<p>a Task indicating completion of the task.</p>

<h5 id="parameters-7">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>command</td>
      <td><a href="#T-T-Microsoft-VisualStudio-Extensibility-Commands-CommandHandlerAsync" title="T:Microsoft.VisualStudio.Extensibility.Commands.CommandHandlerAsync">T:Microsoft.VisualStudio.Extensibility.Commands.CommandHandlerAsync</a></td>
      <td>Command instance being executed.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-CommandIconAttribute"></a></p>
<h2 id="commandiconattribute-type">CommandIconAttribute <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-5">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-22">Summary</h5>

<p>An attribute used on Command classes to specify the icon to be diplayed with the command.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandIconAttribute-#ctor-System-String,Microsoft-VisualStudio-Extensibility-Commands-IconSettings-"></a></p>
<h3 id="ctorimagemonikericonsettings-constructor">#ctor(imageMoniker,iconSettings) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-23">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandIconAttribute" title="Microsoft.VisualStudio.Extensibility.Commands.CommandIconAttribute">CommandIconAttribute</a> class.</p>

<h5 id="parameters-8">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>imageMoniker</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>The name of a KnownMoniker to be used as the icon for a command.</td>
    </tr>
    <tr>
      <td>iconSettings</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-IconSettings" title="Microsoft.VisualStudio.Extensibility.Commands.IconSettings">Microsoft.VisualStudio.Extensibility.Commands.IconSettings</a></td>
      <td>The settings for how to display the icon.</td>
    </tr>
  </tbody>
</table>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-CommandIconAttribute-Icon"></a></p>
<h3 id="icon-property">Icon <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-24">Summary</h5>

<p>Gets the name of the icon.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-CommandIconAttribute-IconSettings"></a></p>
<h3 id="iconsettings-property">IconSettings <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-25">Summary</h5>

<p>Gets the settings related to how the command should be displayed.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase"></a></p>
<h2 id="commandsetbase-type">CommandSetBase <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-6">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-26">Summary</h5>

<p>Provides functionality for extending Visual Studio through brokered services.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-#ctor-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility,Microsoft-VisualStudio-Extensibility-Extension,System-IServiceProvider,Microsoft-VisualStudio-Extensibility-Commands-ICommandSetFactory-"></a></p>
<h3 id="ctorextensibilitycontainerserviceprovidercommandsetfactory-constructor">#ctor(extensibility,container,serviceProvider,commandSetFactory) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-27">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase">CommandSetBase</a> class.</p>

<h5 id="parameters-9">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>extensibility</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility" title="Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility">Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility</a></td>
      <td>Extensibility instance.</td>
    </tr>
    <tr>
      <td>container</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Extension" title="Microsoft.VisualStudio.Extensibility.Extension">Microsoft.VisualStudio.Extensibility.Extension</a></td>
      <td>Extension instance that can be used for sharing state across parts.</td>
    </tr>
    <tr>
      <td>serviceProvider</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.IServiceProvider" title="System.IServiceProvider">System.IServiceProvider</a></td>
      <td>Extension host service provider.</td>
    </tr>
    <tr>
      <td>commandSetFactory</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-ICommandSetFactory" title="Microsoft.VisualStudio.Extensibility.Commands.ICommandSetFactory">Microsoft.VisualStudio.Extensibility.Commands.ICommandSetFactory</a></td>
      <td>Factory instance that is used to create the command set (could be same as container instance).</td>
    </tr>
  </tbody>
</table>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-Item-System-String-"></a></p>
<h3 id="item-property">Item <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-28">Summary</h5>

<p>Gets a registered command instance on this command set.</p>

<h5 id="returns-3">Returns</h5>

<p>an instance of <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-ICommand" title="Microsoft.VisualStudio.Extensibility.Commands.ICommand">ICommand</a> to help with setting command state.</p>

<h5 id="parameters-10">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>commandName</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>Name of the command in scope of the command set.</td>
    </tr>
  </tbody>
</table>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-Microsoft#VisualStudio#Extensibility#Commands#ICommandSet#Commands"></a></p>
<h3 id="microsoftvisualstudioextensibilitycommandsicommandsetcommands-property">Microsoft#VisualStudio#Extensibility#Commands#ICommandSet#Commands <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-29">Summary</h5>

<p><em>Inherit from parent.</em></p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-Dispose-System-Boolean-"></a></p>
<h3 id="dispose-method">Dispose() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-30">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-11">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-InitializeAsync-Microsoft-ServiceHub-Framework-IServiceBroker,System-Threading-CancellationToken-"></a></p>
<h3 id="initializeasync-method">InitializeAsync() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-31">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-12">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-RegisterCommand-System-String,System-UInt16,Microsoft-VisualStudio-Extensibility-Commands-CommandHandlerAsync-"></a></p>
<h3 id="registercommandcommandnamecommandidcommandhandler-method">RegisterCommand(commandName,commandId,commandHandler) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-32">Summary</h5>

<p>Register a command instance using command name and handler.</p>

<h5 id="returns-4">Returns</h5>

<p>Returns the registeres command instance to set command state if required.</p>

<h5 id="parameters-13">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>commandName</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>Command name to register.</td>
    </tr>
    <tr>
      <td>commandId</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.UInt16" title="System.UInt16">System.UInt16</a></td>
      <td>Command identifier.</td>
    </tr>
    <tr>
      <td>commandHandler</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandHandlerAsync" title="Microsoft.VisualStudio.Extensibility.Commands.CommandHandlerAsync">Microsoft.VisualStudio.Extensibility.Commands.CommandHandlerAsync</a></td>
      <td>Command handler.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-RegisterCommand-Microsoft-VisualStudio-Extensibility-Commands-ICommand-"></a></p>
<h3 id="registercommandcommand-method">RegisterCommand(command) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-33">Summary</h5>

<p>Register an existing command implementation.</p>

<h5 id="parameters-14">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>command</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-ICommand" title="Microsoft.VisualStudio.Extensibility.Commands.ICommand">Microsoft.VisualStudio.Extensibility.Commands.ICommand</a></td>
      <td>Command instance to register.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-RegisterCommandAsync-System-Type-"></a></p>
<h3 id="registercommandasynccommandtype-method">RegisterCommandAsync(commandType) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-34">Summary</h5>

<p>Registers a command defined by the provided type.</p>

<h5 id="returns-5">Returns</h5>

<p>Created command instance.</p>

<h5 id="parameters-15">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>commandType</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Type" title="System.Type">System.Type</a></td>
      <td>Type of the command to register.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-RegisterCommandAsync``1"></a></p>
<h3 id="registercommandasync1-method">RegisterCommandAsync``1() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-35">Summary</h5>

<p>Registers a command from a given type.
The class provided must have <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandAttribute" title="Microsoft.VisualStudio.Extensibility.Commands.CommandAttribute">CommandAttribute</a> attribute on the class.</p>

<h5 id="returns-6">Returns</h5>

<p>Created command instance.</p>

<h5 id="parameters-16">Parameters</h5>

<p>This method has no parameters.</p>

<h5 id="generic-types">Generic Types</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>T</td>
      <td>Type of the command to register.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-CommandSetFactory"></a></p>
<h2 id="commandsetfactory-type">CommandSetFactory <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-7">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-36">Summary</h5>

<p>Provides a base class to create factories for command sets. This class is intented to be used by source generators.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetFactory-#ctor-System-IServiceProvider-"></a></p>
<h3 id="ctorserviceprovider-constructor">#ctor(serviceProvider) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-37">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandSetFactory" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetFactory">CommandSetFactory</a> class.</p>

<h5 id="parameters-17">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>serviceProvider</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.IServiceProvider" title="System.IServiceProvider">System.IServiceProvider</a></td>
      <td>Local service provider for extension host services.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetFactory-#ctor-System-IServiceProvider,Microsoft-VisualStudio-Extensibility-Commands-ExtensionWithCommands-"></a></p>
<h3 id="ctorserviceprovidercontainer-constructor">#ctor(serviceProvider,container) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-38">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandSetFactory" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetFactory">CommandSetFactory</a> class.</p>

<h5 id="parameters-18">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>serviceProvider</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.IServiceProvider" title="System.IServiceProvider">System.IServiceProvider</a></td>
      <td>Local service provider for extension host services.</td>
    </tr>
    <tr>
      <td>container</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-ExtensionWithCommands" title="Microsoft.VisualStudio.Extensibility.Commands.ExtensionWithCommands">Microsoft.VisualStudio.Extensibility.Commands.ExtensionWithCommands</a></td>
      <td>Container that hosts this command set factory.</td>
    </tr>
  </tbody>
</table>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-CommandSetFactory-ServiceMoniker"></a></p>
<h3 id="servicemoniker-property">ServiceMoniker <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-39">Summary</h5>

<p>Gets the ServiceMoniker for the <a href="#T-Microsoft-VisualStudio-RpcContracts-Commands-ICommandSetProvider" title="Microsoft.VisualStudio.RpcContracts.Commands.ICommandSetProvider">ICommandSetProvider</a> that this provides.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetFactory-CreateAsync-Microsoft-ServiceHub-Framework-ServiceMoniker,Microsoft-ServiceHub-Framework-ServiceActivationOptions,System-IServiceProvider,System-Type,System-Type-"></a></p>
<h3 id="createasync-method">CreateAsync() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-40">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-19">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetFactory-GetServiceDescriptor-Microsoft-ServiceHub-Framework-ServiceMoniker-"></a></p>
<h3 id="getservicedescriptor-method">GetServiceDescriptor() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-41">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-20">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetFactory-InitializeCommandsAsync-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-"></a></p>
<h3 id="initializecommandsasynccommandset-method">InitializeCommandsAsync(commandSet) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-42">Summary</h5>

<p>Called when command set is about to be initialized. This can be used to add commands, set up initial state.</p>

<h5 id="returns-7">Returns</h5>

<p>a Task indicating completion.</p>

<h5 id="parameters-21">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>commandSet</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase">Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase</a></td>
      <td>Command set instance that is being initialized.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider"></a></p>
<h2 id="commandsetprovider-type">CommandSetProvider <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-8">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-43">Summary</h5>

<p>Allows command sets information to be sent over process boundary.
Turns change events into serializable update events.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider-#ctor-Microsoft-VisualStudio-RpcContracts-Commands-IUpdateReceiver,Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility,Microsoft-VisualStudio-Extensibility-Extension,System-Func{Microsoft-VisualStudio-Extensibility-Commands-ICommandSet}-"></a></p>
<h3 id="ctorupdatereceiverextensibilitycontainercommandsetcreator-constructor">#ctor(updateReceiver,extensibility,container,commandSetCreator) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-44">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetProvider">CommandSetProvider</a> class.</p>

<h5 id="parameters-22">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>updateReceiver</td>
      <td><a href="#T-Microsoft-VisualStudio-RpcContracts-Commands-IUpdateReceiver" title="Microsoft.VisualStudio.RpcContracts.Commands.IUpdateReceiver">Microsoft.VisualStudio.RpcContracts.Commands.IUpdateReceiver</a></td>
      <td>The callback to the client to send updates.</td>
    </tr>
    <tr>
      <td>extensibility</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility" title="Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility">Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility</a></td>
      <td>Visual Studio extensibility object.</td>
    </tr>
    <tr>
      <td>container</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Extension" title="Microsoft.VisualStudio.Extensibility.Extension">Microsoft.VisualStudio.Extensibility.Extension</a></td>
      <td>Extension instance that can be used for sharing state across parts.</td>
    </tr>
    <tr>
      <td>commandSetCreator</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Func" title="System.Func{Microsoft.VisualStudio.Extensibility.Commands.ICommandSet}">System.Func{Microsoft.VisualStudio.Extensibility.Commands.ICommandSet}</a></td>
      <td>A delegate to create the command set on demand.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider-ActivateCommandSetAsync-System-Threading-CancellationToken-"></a></p>
<h3 id="activatecommandsetasync-method">ActivateCommandSetAsync() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-45">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-23">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider-CreateFactoryAsync-Microsoft-ServiceHub-Framework-ServiceActivationOptions,Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility,Microsoft-VisualStudio-Extensibility-Extension,System-Func{Microsoft-VisualStudio-Extensibility-Commands-ICommandSet},System-Threading-CancellationToken-"></a></p>
<h3 id="createfactoryasyncoptionsextensibilitycontainercommandsetcreatorcancellationtoken-method">CreateFactoryAsync(options,extensibility,container,commandSetCreator,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-46">Summary</h5>

<p>Create a service broker factory for a CommandSetProvider.</p>

<h5 id="returns-8">Returns</h5>

<p>ValueTask returning the ICommandSetProvider service.</p>

<h5 id="parameters-24">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>options</td>
      <td><a href="#T-Microsoft-ServiceHub-Framework-ServiceActivationOptions" title="Microsoft.ServiceHub.Framework.ServiceActivationOptions">Microsoft.ServiceHub.Framework.ServiceActivationOptions</a></td>
      <td>Additional options that alter how the service may be activated or provide additional data to the service constructor.</td>
    </tr>
    <tr>
      <td>extensibility</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility" title="Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility">Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility</a></td>
      <td>Extensibility object.</td>
    </tr>
    <tr>
      <td>container</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Extension" title="Microsoft.VisualStudio.Extensibility.Extension">Microsoft.VisualStudio.Extensibility.Extension</a></td>
      <td>Extension instance that can be used for sharing state across parts.</td>
    </tr>
    <tr>
      <td>commandSetCreator</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Func" title="System.Func{Microsoft.VisualStudio.Extensibility.Commands.ICommandSet}">System.Func{Microsoft.VisualStudio.Extensibility.Commands.ICommandSet}</a></td>
      <td>Delegate to create the command set.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>Cancellation token.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider-CreateFactoryAsync``1-Microsoft-ServiceHub-Framework-ServiceActivationOptions,Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility,Microsoft-VisualStudio-Extensibility-Extension,System-Threading-CancellationToken-"></a></p>
<h3 id="createfactoryasync1optionsextensibilitycontainercancellationtoken-method">CreateFactoryAsync``1(options,extensibility,container,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-47">Summary</h5>

<p>Create a service broker factory for a CommandSetProvider.</p>

<h5 id="returns-9">Returns</h5>

<p>ValueTask returning the ICommandSetProvider service.</p>

<h5 id="parameters-25">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>options</td>
      <td><a href="#T-Microsoft-ServiceHub-Framework-ServiceActivationOptions" title="Microsoft.ServiceHub.Framework.ServiceActivationOptions">Microsoft.ServiceHub.Framework.ServiceActivationOptions</a></td>
      <td>Additional options that alter how the service may be activated or provide additional data to the service constructor.</td>
    </tr>
    <tr>
      <td>extensibility</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility" title="Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility">Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility</a></td>
      <td>Extensibility object.</td>
    </tr>
    <tr>
      <td>container</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Extension" title="Microsoft.VisualStudio.Extensibility.Extension">Microsoft.VisualStudio.Extensibility.Extension</a></td>
      <td>Extension instance that can be used for sharing state across parts.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>Cancellation token.</td>
    </tr>
  </tbody>
</table>

<h5 id="generic-types-1">Generic Types</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>T</td>
      <td>The command set to be created.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider-DeactivateCommandSetAsync-System-Threading-CancellationToken-"></a></p>
<h3 id="deactivatecommandsetasync-method">DeactivateCommandSetAsync() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-48">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-26">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider-Dispose-System-Boolean-"></a></p>
<h3 id="disposedisposing-method">Dispose(disposing) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-49">Summary</h5>

<p>Disposes managed and native resources held by this instance.</p>

<h5 id="parameters-27">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>disposing</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Boolean" title="System.Boolean">System.Boolean</a></td>
      <td><code class="language-plaintext highlighter-rouge">true</code> if being disposed; <code class="language-plaintext highlighter-rouge">false</code> if being finalized.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandSetProvider-ExecuteCommandAsync-System-UInt16,System-Collections-Generic-IReadOnlyDictionary{System-String,System-Object},System-Threading-CancellationToken-"></a></p>
<h3 id="executecommandasync-method-1">ExecuteCommandAsync() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-50">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-28">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-CommandVisibleWhenAttribute"></a></p>
<h2 id="commandvisiblewhenattribute-type">CommandVisibleWhenAttribute <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-9">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-51">Summary</h5>

<p>An attribute used on Command classes to specify when the command should be visible.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandVisibleWhenAttribute-#ctor-System-String,System-String[],System-String[]-"></a></p>
<h3 id="ctorexpressiontermnamestermvalues-constructor-1">#ctor(expression,termNames,termValues) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-52">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandVisibleWhenAttribute" title="Microsoft.VisualStudio.Extensibility.Commands.CommandVisibleWhenAttribute">CommandVisibleWhenAttribute</a> class.</p>

<h5 id="parameters-29">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>expression</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>Boolean expression string.</td>
    </tr>
    <tr>
      <td>termNames</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String[]" title="System.String[]">System.String[]</a></td>
      <td>Array of terms used in the expression.</td>
    </tr>
    <tr>
      <td>termValues</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String[]" title="System.String[]">System.String[]</a></td>
      <td>Values of each term in the same order as term names array.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-CommandWithHandler"></a></p>
<h2 id="commandwithhandler-type">CommandWithHandler <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-10">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-53">Summary</h5>

<p>An internal command implementation that executes a handler to support dynamic registration scenarios.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandWithHandler-#ctor-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility,System-UInt16,Microsoft-VisualStudio-Extensibility-Commands-CommandHandlerAsync-"></a></p>
<h3 id="ctorextensibilityidhandler-constructor">#ctor(extensibility,id,handler) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-54">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandWithHandler" title="Microsoft.VisualStudio.Extensibility.Commands.CommandWithHandler">CommandWithHandler</a> class.</p>

<h5 id="parameters-30">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>extensibility</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility" title="Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility">Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility</a></td>
      <td>Extensibility point to be used for command execution.</td>
    </tr>
    <tr>
      <td>id</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.UInt16" title="System.UInt16">System.UInt16</a></td>
      <td>Command identifier in context of the command set.</td>
    </tr>
    <tr>
      <td>handler</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandHandlerAsync" title="Microsoft.VisualStudio.Extensibility.Commands.CommandHandlerAsync">Microsoft.VisualStudio.Extensibility.Commands.CommandHandlerAsync</a></td>
      <td>Command handler to execute.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandWithHandler-ExecuteCommandAsync-Microsoft-VisualStudio-Extensibility-Definitions-IClientContext,System-Threading-CancellationToken-"></a></p>
<h3 id="executecommandasynccontextcancellationtoken-method-1">ExecuteCommandAsync(context,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-55">Summary</h5>

<p>Raised when command is executed on the client.</p>

<h5 id="returns-10">Returns</h5>

<p>a Task indication completion.</p>

<h5 id="parameters-31">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>context</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Definitions-IClientContext" title="Microsoft.VisualStudio.Extensibility.Definitions.IClientContext">Microsoft.VisualStudio.Extensibility.Definitions.IClientContext</a></td>
      <td>Client context at the time of command execution.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>Cancellation token to monitor.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-CommandsPackageAttribute"></a></p>
<h2 id="commandspackageattribute-type">CommandsPackageAttribute <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-11">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-56">Summary</h5>

<p>An attribute used on Command classes to specify the command id (or name in future).</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandsPackageAttribute-#ctor-System-String,System-String-"></a></p>
<h3 id="ctorservicenameversionstring-constructor">#ctor(serviceName,versionString) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-57">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandsPackageAttribute" title="Microsoft.VisualStudio.Extensibility.Commands.CommandsPackageAttribute">CommandsPackageAttribute</a> class.</p>

<h5 id="parameters-32">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>serviceName</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>Service moniker name.</td>
    </tr>
    <tr>
      <td>versionString</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>Service moniker version.</td>
    </tr>
  </tbody>
</table>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-CommandsPackageAttribute-ServiceMoniker"></a></p>
<h3 id="servicemoniker-property-1">ServiceMoniker <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-58">Summary</h5>

<p>Gets the service moniker.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-CommandsPackageLoadAttribute"></a></p>
<h2 id="commandspackageloadattribute-type">CommandsPackageLoadAttribute <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-12">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-59">Summary</h5>

<p>An attribute used on commandset classes to specify when the commandset should be loaded.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-CommandsPackageLoadAttribute-#ctor-System-String,System-String[],System-String[]-"></a></p>
<h3 id="ctorexpressiontermnamestermvalues-constructor-2">#ctor(expression,termNames,termValues) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-60">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandsPackageLoadAttribute" title="Microsoft.VisualStudio.Extensibility.Commands.CommandsPackageLoadAttribute">CommandsPackageLoadAttribute</a> class.</p>

<h5 id="parameters-33">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>expression</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>Boolean expression string.</td>
    </tr>
    <tr>
      <td>termNames</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String[]" title="System.String[]">System.String[]</a></td>
      <td>Array of terms used in the expression.</td>
    </tr>
    <tr>
      <td>termValues</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String[]" title="System.String[]">System.String[]</a></td>
      <td>Values of each term in the same order as term names array.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-Microsoft-VisualStudio-Extensibility-DiagnosticsExtensionMethods"></a></p>
<h2 id="diagnosticsextensionmethods-type">DiagnosticsExtensionMethods <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-13">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility</p>

<h5 id="summary-61">Summary</h5>

<p>Provides functionality for extending Visual Studio through brokered services for Langauge Services.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-DiagnosticsExtensionMethods-GetDiagnosticsProvider-Microsoft-VisualStudio-Extensibility-Documents-LanguagesExtensibility,System-String-"></a></p>
<h3 id="getdiagnosticsproviderextensibilitypointgeneratorid-method">GetDiagnosticsProvider(extensibilityPoint,generatorId) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-62">Summary</h5>

<p>Creates a new diagnostics or gets the previously registered provider to utilize error list functionality.</p>

<h5 id="returns-11">Returns</h5>

<p>an instance of <a href="#T-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider" title="Microsoft.VisualStudio.Extensibility.Documents.DiagnosticsProvider">DiagnosticsProvider</a> that can be utilized to add/append/reset diagnostics.</p>

<h5 id="parameters-34">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>extensibilityPoint</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Documents-LanguagesExtensibility" title="Microsoft.VisualStudio.Extensibility.Documents.LanguagesExtensibility">Microsoft.VisualStudio.Extensibility.Documents.LanguagesExtensibility</a></td>
      <td>Extensibility object instance.</td>
    </tr>
    <tr>
      <td>generatorId</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>Unique identifier for the component that owns the provider to be created.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider"></a></p>
<h2 id="diagnosticsprovider-type">DiagnosticsProvider <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-14">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Documents</p>

<h5 id="summary-63">Summary</h5>

<p>Provides functionality for extending Visual Studio through brokered services for Langauge Services.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider-#ctor-System-String,Microsoft-VisualStudio-Extensibility-ExtensibilityPoint-"></a></p>
<h3 id="ctorgeneratoridextensibilitypoint-constructor">#ctor(generatorId,extensibilityPoint) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-64">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider" title="Microsoft.VisualStudio.Extensibility.Documents.DiagnosticsProvider">DiagnosticsProvider</a> class.</p>

<h5 id="parameters-35">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>generatorId</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>Unique identifier associated with the owner of this provider.</td>
    </tr>
    <tr>
      <td>extensibilityPoint</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-ExtensibilityPoint" title="Microsoft.VisualStudio.Extensibility.ExtensibilityPoint">Microsoft.VisualStudio.Extensibility.ExtensibilityPoint</a></td>
      <td>Another instance of extensibility point object to use for initialization.</td>
    </tr>
  </tbody>
</table>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider-GeneratorId"></a></p>
<h3 id="generatorid-property">GeneratorId <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-65">Summary</h5>

<p>Gets the unique identifier associated with the owner of this provider.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider-AppendDiagnosticsAsync-Microsoft-VisualStudio-Extensibility-Editor-Data-ITextDocument,System-Collections-Generic-IEnumerable{Microsoft-VisualStudio-RpcContracts-DiagnosticManagement-Diagnostic},System-Threading-CancellationToken-"></a></p>
<h3 id="appenddiagnosticsasynctextdocumentdiagnosticscancellationtoken-method">AppendDiagnosticsAsync(textDocument,diagnostics,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-66">Summary</h5>

<p>Append the diagnostics with <code class="language-plaintext highlighter-rouge">diagnostics</code> to the previously reported list.</p>

<h5 id="returns-12">Returns</h5>

<p>A <a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.Tasks.Task" title="System.Threading.Tasks.Task">Task</a> representing the asynchronous operation.</p>

<h5 id="parameters-36">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>textDocument</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Editor-Data-ITextDocument" title="Microsoft.VisualStudio.Extensibility.Editor.Data.ITextDocument">Microsoft.VisualStudio.Extensibility.Editor.Data.ITextDocument</a></td>
      <td>Text document instance that diagnostic entries are intended for.</td>
    </tr>
    <tr>
      <td>diagnostics</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Collections.Generic.IEnumerable" title="System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.RpcContracts.DiagnosticManagement.Diagnostic}">System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.RpcContracts.DiagnosticManagement.Diagnostic}</a></td>
      <td>New diagnostics to append.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>A cancellation token to cancel the in-progress invocation.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider-AppendDiagnosticsAsync-System-Uri,System-Collections-Generic-IEnumerable{Microsoft-VisualStudio-RpcContracts-DiagnosticManagement-Diagnostic},System-Threading-CancellationToken-"></a></p>
<h3 id="appenddiagnosticsasyncdocumentmonikerdiagnosticscancellationtoken-method">AppendDiagnosticsAsync(documentMoniker,diagnostics,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-67">Summary</h5>

<p>Append the diagnostics with <code class="language-plaintext highlighter-rouge">diagnostics</code> to the previously reported list.</p>

<h5 id="returns-13">Returns</h5>

<p>A <a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.Tasks.Task" title="System.Threading.Tasks.Task">Task</a> representing the asynchronous operation.</p>

<h5 id="parameters-37">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>documentMoniker</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Uri" title="System.Uri">System.Uri</a></td>
      <td>Document moniker that diagnostic entries are intended for.</td>
    </tr>
    <tr>
      <td>diagnostics</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Collections.Generic.IEnumerable" title="System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.RpcContracts.DiagnosticManagement.Diagnostic}">System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.RpcContracts.DiagnosticManagement.Diagnostic}</a></td>
      <td>New diagnostics to append.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>A cancellation token to cancel the in-progress invocation.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider-AppendDiagnosticsAsync-System-Uri,System-Int32,System-Collections-Generic-IEnumerable{Microsoft-VisualStudio-RpcContracts-DiagnosticManagement-Diagnostic},System-Threading-CancellationToken-"></a></p>
<h3 id="appenddiagnosticsasyncdocumentmonikerdocumentversiondiagnosticscancellationtoken-method">AppendDiagnosticsAsync(documentMoniker,documentVersion,diagnostics,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-68">Summary</h5>

<p>Append the diagnostics with <code class="language-plaintext highlighter-rouge">diagnostics</code> to the previously reported list.</p>

<h5 id="returns-14">Returns</h5>

<p>A <a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.Tasks.Task" title="System.Threading.Tasks.Task">Task</a> representing the asynchronous operation.</p>

<h5 id="parameters-38">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>documentMoniker</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Uri" title="System.Uri">System.Uri</a></td>
      <td>Document moniker that diagnostic entries are intended for.</td>
    </tr>
    <tr>
      <td>documentVersion</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Int32" title="System.Int32">System.Int32</a></td>
      <td>Version of the document that diagnostic entries are intended for.</td>
    </tr>
    <tr>
      <td>diagnostics</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Collections.Generic.IEnumerable" title="System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.RpcContracts.DiagnosticManagement.Diagnostic}">System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.RpcContracts.DiagnosticManagement.Diagnostic}</a></td>
      <td>New diagnostics to append.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>A cancellation token to cancel the in-progress invocation.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider-ClearDiagnosticsAsync-Microsoft-VisualStudio-Extensibility-Editor-Data-ITextDocument,System-Threading-CancellationToken-"></a></p>
<h3 id="cleardiagnosticsasynctextdocumentcancellationtoken-method">ClearDiagnosticsAsync(textDocument,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-69">Summary</h5>

<p>Clears all previous reported diagnostics by this generator for a given document.</p>

<h5 id="returns-15">Returns</h5>

<p>A <a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.Tasks.Task" title="System.Threading.Tasks.Task">Task</a> representing the asynchronous operation.</p>

<h5 id="parameters-39">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>textDocument</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Editor-Data-ITextDocument" title="Microsoft.VisualStudio.Extensibility.Editor.Data.ITextDocument">Microsoft.VisualStudio.Extensibility.Editor.Data.ITextDocument</a></td>
      <td>Text document to clear diagnostic entries for.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>A cancellation token to cancel the in-progress invocation.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider-ClearDiagnosticsAsync-System-Uri,System-Threading-CancellationToken-"></a></p>
<h3 id="cleardiagnosticsasyncdocumentmonikercancellationtoken-method">ClearDiagnosticsAsync(documentMoniker,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-70">Summary</h5>

<p>Clears all previous reported diagnostics by this generator for a given document.</p>

<h5 id="returns-16">Returns</h5>

<p>A <a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.Tasks.Task" title="System.Threading.Tasks.Task">Task</a> representing the asynchronous operation.</p>

<h5 id="parameters-40">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>documentMoniker</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Uri" title="System.Uri">System.Uri</a></td>
      <td>Document moniker to clear diagnostic entries for.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>A cancellation token to cancel the in-progress invocation.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-DiagnosticsProvider-Dispose-System-Boolean-"></a></p>
<h3 id="dispose-method-1">Dispose() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-71">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-41">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="T-System-Diagnostics-CodeAnalysis-DisallowNullAttribute"></a></p>
<h2 id="disallownullattribute-type">DisallowNullAttribute <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-15">Namespace</h5>

<p>System.Diagnostics.CodeAnalysis</p>

<h5 id="summary-72">Summary</h5>

<p>Specifies that <code class="language-plaintext highlighter-rouge">null</code> is disallowed as an input even if the
    corresponding type allows it.</p>

<p><a name="M-System-Diagnostics-CodeAnalysis-DisallowNullAttribute-#ctor"></a></p>
<h3 id="ctor-constructor-1">#ctor() <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-73">Summary</h5>

<p>Initializes a new instance of the <a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Diagnostics.CodeAnalysis.DisallowNullAttribute" title="System.Diagnostics.CodeAnalysis.DisallowNullAttribute">DisallowNullAttribute</a> class.</p>

<h5 id="parameters-42">Parameters</h5>

<p>This constructor has no parameters.</p>

<p><a name="T-System-Diagnostics-CodeAnalysis-DoesNotReturnAttribute"></a></p>
<h2 id="doesnotreturnattribute-type">DoesNotReturnAttribute <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-16">Namespace</h5>

<p>System.Diagnostics.CodeAnalysis</p>

<h5 id="summary-74">Summary</h5>

<p>Specifies that a method that will never return under any circumstance.</p>

<p><a name="M-System-Diagnostics-CodeAnalysis-DoesNotReturnAttribute-#ctor"></a></p>
<h3 id="ctor-constructor-2">#ctor() <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-75">Summary</h5>

<p>Initializes a new instance of the <a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute" title="System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">DoesNotReturnAttribute</a> class.</p>

<h5 id="parameters-43">Parameters</h5>

<p>This constructor has no parameters.</p>

<p><a name="T-System-Diagnostics-CodeAnalysis-DoesNotReturnIfAttribute"></a></p>
<h2 id="doesnotreturnifattribute-type">DoesNotReturnIfAttribute <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-17">Namespace</h5>

<p>System.Diagnostics.CodeAnalysis</p>

<h5 id="summary-76">Summary</h5>

<p>Specifies that the method will not return if the associated <a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Boolean" title="System.Boolean">Boolean</a>
    parameter is passed the specified value.</p>

<p><a name="M-System-Diagnostics-CodeAnalysis-DoesNotReturnIfAttribute-#ctor-System-Boolean-"></a></p>
<h3 id="ctorparametervalue-constructor">#ctor(parameterValue) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-77">Summary</h5>

<p>Initializes a new instance of the <a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute" title="System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">DoesNotReturnIfAttribute</a>
    class with the specified parameter value.</p>

<h5 id="parameters-44">Parameters</h5>

<p>| Name | Type | Description |
| â- | â- | ââââ |
| parameterValue | <a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Boolean" title="System.Boolean">System.Boolean</a> | The condition parameter value.
    Code after the method is considered unreachable by diagnostics if the argument
    to the associated parameter matches this value. |</p>

<p><a name="P-System-Diagnostics-CodeAnalysis-DoesNotReturnIfAttribute-ParameterValue"></a></p>
<h3 id="parametervalue-property">ParameterValue <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-78">Summary</h5>

<p>Gets the condition parameter value.
    Code after the method is considered unreachable by diagnostics if the argument
    to the associated parameter matches this value.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand"></a></p>
<h2 id="executablecommand-type">ExecutableCommand <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-18">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-79">Summary</h5>

<p>Provides a framework implementation of a command that can be executed.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-#ctor-System-UInt16-"></a></p>
<h3 id="ctorid-constructor">#ctor(id) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-80">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand" title="Microsoft.VisualStudio.Extensibility.Commands.ExecutableCommand">ExecutableCommand</a> class.</p>

<h5 id="parameters-45">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>id</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.UInt16" title="System.UInt16">System.UInt16</a></td>
      <td>The id of the command.</td>
    </tr>
  </tbody>
</table>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-Id"></a></p>
<h3 id="id-property-1">Id <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-81">Summary</h5>

<p><em>Inherit from parent.</em></p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-IsDisposed"></a></p>
<h3 id="isdisposed-property">IsDisposed <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-82">Summary</h5>

<p><em>Inherit from parent.</em></p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-IsEnabled"></a></p>
<h3 id="isenabled-property">IsEnabled <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-83">Summary</h5>

<p><em>Inherit from parent.</em></p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-Dispose"></a></p>
<h3 id="dispose-method-2">Dispose() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-84">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-46">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-Dispose-System-Boolean-"></a></p>
<h3 id="disposedisposing-method-1">Dispose(disposing) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-85">Summary</h5>

<p>Disposes the command instance.</p>

<h5 id="parameters-47">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>disposing</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Boolean" title="System.Boolean">System.Boolean</a></td>
      <td>If true, managed instances should be disposed.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-ExecuteCommandAsync-System-Collections-Generic-IReadOnlyDictionary{System-String,System-Object},System-Threading-CancellationToken-"></a></p>
<h3 id="executecommandasync-method-2">ExecuteCommandAsync() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-86">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-48">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-IsValidId-System-UInt16-"></a></p>
<h3 id="isvalididid-method">IsValidId(id) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-87">Summary</h5>

<p>Determins if a command id is valid.</p>

<h5 id="returns-17">Returns</h5>

<p>Returns <code class="language-plaintext highlighter-rouge">true</code> if the id is valid.</p>

<h5 id="parameters-49">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>id</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.UInt16" title="System.UInt16">System.UInt16</a></td>
      <td>The id to test.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-OnPropertyChanged-System-ComponentModel-PropertyChangedEventArgs-"></a></p>
<h3 id="onpropertychangedeventargs-method">OnPropertyChanged(eventArgs) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-88">Summary</h5>

<p>Fires <a href="#E-Microsoft-VisualStudio-Extensibility-Commands-ExecutableCommand-PropertyChanged" title="Microsoft.VisualStudio.Extensibility.Commands.ExecutableCommand.PropertyChanged"></a> event.</p>

<h5 id="parameters-50">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>eventArgs</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.ComponentModel.PropertyChangedEventArgs" title="System.ComponentModel.PropertyChangedEventArgs">System.ComponentModel.PropertyChangedEventArgs</a></td>
      <td>The arg to pass to the event.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-Microsoft-VisualStudio-Extensibility-ExtensibilityPoints"></a></p>
<h2 id="extensibilitypoints-type">ExtensibilityPoints <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-19">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility</p>

<h5 id="summary-89">Summary</h5>

<p>Helper extension methods.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-ExtensibilityPoints-Languages-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility-"></a></p>
<h3 id="languagesextensibility-method">Languages(extensibility) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-90">Summary</h5>

<p>Gets the surface for Language service features such as diagnostics management.</p>

<h5 id="returns-18">Returns</h5>

<p>an instance of <a href="#T-Microsoft-VisualStudio-Extensibility-Documents-LanguagesExtensibility" title="Microsoft.VisualStudio.Extensibility.Documents.LanguagesExtensibility">LanguagesExtensibility</a>.</p>

<h5 id="parameters-51">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>extensibility</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility" title="Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility">Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility</a></td>
      <td>Extensibility object.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-ExtensibilityPoints-Views-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility-"></a></p>
<h3 id="viewsextensibility-method">Views(extensibility) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-91">Summary</h5>

<p>Gets the surface area for View management such as output windows, tool windows.</p>

<h5 id="returns-19">Returns</h5>

<p>an instance of <a href="#T-Microsoft-VisualStudio-Extensibility-Documents-ViewsExtensibility" title="Microsoft.VisualStudio.Extensibility.Documents.ViewsExtensibility">ViewsExtensibility</a>.</p>

<h5 id="parameters-52">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>extensibility</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility" title="Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility">Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility</a></td>
      <td>Extensibility object.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-ExtensibilityPoints-Workspaces-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility-"></a></p>
<h3 id="workspacesextensibility-method">Workspaces(extensibility) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-92">Summary</h5>

<p>Gets the surface for Workspace management such as querying items in projects.</p>

<h5 id="returns-20">Returns</h5>

<p>an instance of <a href="#T-Microsoft-VisualStudio-Extensibility-Workspaces-WorkspacesExtensibility" title="Microsoft.VisualStudio.Extensibility.Workspaces.WorkspacesExtensibility">WorkspacesExtensibility</a>.</p>

<h5 id="parameters-53">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>extensibility</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility" title="Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility">Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility</a></td>
      <td>Extensibility object.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Extension"></a></p>
<h2 id="extension-type">Extension <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-20">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility</p>

<h5 id="summary-93">Summary</h5>

<p>Base class for an extension that can host multiple service instances.</p>

<h5 id="remarks-2">Remarks</h5>

<p>The instance act as the shared instance similar to previous VSPackage concept.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Extension-InitializeServices-Microsoft-Extensions-DependencyInjection-IServiceCollection-"></a></p>
<h3 id="initializeservices-method">InitializeServices() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-94">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-54">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-ExtensionMethods"></a></p>
<h2 id="extensionmethods-type">ExtensionMethods <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-21">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility</p>

<h5 id="summary-95">Summary</h5>

<p>Container for client context at the time of a command invocation.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-ExtensionMethods-GetActiveTextViewAsync-Microsoft-VisualStudio-Extensibility-Definitions-IClientContext,System-Threading-CancellationToken-"></a></p>
<h3 id="getactivetextviewasyncclientcontextcancellationtoken-method">GetActiveTextViewAsync(clientContext,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-96">Summary</h5>

<p>Gets the active text view on the IDE at the time context was created.</p>

<h5 id="returns-21">Returns</h5>

<p>an instance of <a href="#T-Microsoft-VisualStudio-Extensibility-Editor-UI-ITextView" title="Microsoft.VisualStudio.Extensibility.Editor.UI.ITextView">ITextView</a> if there is an active text view, otherwise null.</p>

<h5 id="parameters-55">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>clientContext</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Definitions-IClientContext" title="Microsoft.VisualStudio.Extensibility.Definitions.IClientContext">Microsoft.VisualStudio.Extensibility.Definitions.IClientContext</a></td>
      <td>Client context to utilize.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>Cancellation token to monitor,.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-ExtensionMethods-GetSelectedPathAsync-Microsoft-VisualStudio-Extensibility-Definitions-IClientContext,System-Threading-CancellationToken-"></a></p>
<h3 id="getselectedpathasyncclientcontextcancellationtoken-method">GetSelectedPathAsync(clientContext,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-97">Summary</h5>

<p>Gets the selected item path on the local machine from the current workspace tree.</p>

<h5 id="returns-22">Returns</h5>

<p>A collection of workspace item monikers that can be used across workspace queries.</p>

<h5 id="parameters-56">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>clientContext</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Definitions-IClientContext" title="Microsoft.VisualStudio.Extensibility.Definitions.IClientContext">Microsoft.VisualStudio.Extensibility.Definitions.IClientContext</a></td>
      <td>Client context to utilize.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>Cancellation token to monitor,.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-ExtensionWithCommands"></a></p>
<h2 id="extensionwithcommands-type">ExtensionWithCommands <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-22">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-98">Summary</h5>

<p>Provides a base class to create extensions that contains a command set.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-ExtensionWithCommands-#ctor"></a></p>
<h3 id="ctor-constructor-3">#ctor() <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-99">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-ExtensionWithCommands" title="Microsoft.VisualStudio.Extensibility.Commands.ExtensionWithCommands">ExtensionWithCommands</a> class.</p>

<h5 id="parameters-57">Parameters</h5>

<p>This constructor has no parameters.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-ExtensionWithCommands-ServiceMoniker"></a></p>
<h3 id="servicemoniker-property-2">ServiceMoniker <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-100">Summary</h5>

<p>Gets the ServiceMoniker for the <a href="#T-Microsoft-VisualStudio-RpcContracts-Commands-ICommandSetProvider" title="Microsoft.VisualStudio.RpcContracts.Commands.ICommandSetProvider">ICommandSetProvider</a> that this provides.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-ExtensionWithCommands-CreateAsync-Microsoft-ServiceHub-Framework-ServiceMoniker,Microsoft-ServiceHub-Framework-ServiceActivationOptions,System-IServiceProvider,System-Type,System-Type-"></a></p>
<h3 id="createasync-method-1">CreateAsync() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-101">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-58">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-ExtensionWithCommands-GetServiceDescriptor-Microsoft-ServiceHub-Framework-ServiceMoniker-"></a></p>
<h3 id="getservicedescriptor-method-1">GetServiceDescriptor() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-102">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-59">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-ExtensionWithCommands-InitializeCommandsAsync-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-"></a></p>
<h3 id="initializecommandsasynccommandset-method-1">InitializeCommandsAsync(commandSet) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-103">Summary</h5>

<p>Called when command set is about to be initialized. This can be used to add commands, set up initial state.</p>

<h5 id="returns-23">Returns</h5>

<p>a Task indicating completion.</p>

<h5 id="parameters-60">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>commandSet</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase">Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase</a></td>
      <td>Command set instance that is being initialized.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-ICommand"></a></p>
<h2 id="icommand-type">ICommand <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-23">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-104">Summary</h5>

<p>Represents a command implementation.
A command can implement multiple interfaces to define what capabilities it has.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-ICommand-Id"></a></p>
<h3 id="id-property-2">Id <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-105">Summary</h5>

<p>Gets a unique id for this command within its command set.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-ICommandSet"></a></p>
<h2 id="icommandset-type">ICommandSet <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-24">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-106">Summary</h5>

<p>Represents a set of commands.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-ICommandSet-Commands"></a></p>
<h3 id="commands-property">Commands <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-107">Summary</h5>

<p>Gets the list of commands for this command set.
Each command must have a unique Id within this collection.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-ICommandSet-InitializeAsync-Microsoft-ServiceHub-Framework-IServiceBroker,System-Threading-CancellationToken-"></a></p>
<h3 id="initializeasyncservicebrokercancellationtoken-method">InitializeAsync(serviceBroker,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-108">Summary</h5>

<p>Allows the command set to initialize asyncronously.</p>

<h5 id="returns-24">Returns</h5>

<p>Task to track the asyncronous call status.</p>

<h5 id="parameters-61">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>serviceBroker</td>
      <td><a href="#T-Microsoft-ServiceHub-Framework-IServiceBroker" title="Microsoft.ServiceHub.Framework.IServiceBroker">Microsoft.ServiceHub.Framework.IServiceBroker</a></td>
      <td>A service broker that can be used to load external servies.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>Cancellation token.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-ICommandSetFactory"></a></p>
<h2 id="icommandsetfactory-type">ICommandSetFactory <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-25">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-109">Summary</h5>

<p>Constructs services registered in an extension based on the descriptors in metadata.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-ICommandSetFactory-ServiceMoniker"></a></p>
<h3 id="servicemoniker-property-3">ServiceMoniker <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-110">Summary</h5>

<p>Gets the ServiceMoniker for the <a href="#T-Microsoft-VisualStudio-RpcContracts-Commands-ICommandSetProvider" title="Microsoft.VisualStudio.RpcContracts.Commands.ICommandSetProvider">ICommandSetProvider</a> that this provides.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-ICommandSetFactory-InitializeCommandsAsync-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase-"></a></p>
<h3 id="initializecommandsasynccommandset-method-2">InitializeCommandsAsync(commandSet) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-111">Summary</h5>

<p>Called when command set is about to be initialized. This can be used to add commands, set up initial state.</p>

<h5 id="returns-25">Returns</h5>

<p>a Task indicating completion.</p>

<h5 id="parameters-62">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>commandSet</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Commands-CommandSetBase" title="Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase">Microsoft.VisualStudio.Extensibility.Commands.CommandSetBase</a></td>
      <td>Command set instance that is being initialized.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-IDynamicCommand"></a></p>
<h2 id="idynamiccommand-type">IDynamicCommand <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-26">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-112">Summary</h5>

<p>Represents a command that can be dynamically created and renamed.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-IDynamicCommand-BaseDefinitionId"></a></p>
<h3 id="basedefinitionid-property-1">BaseDefinitionId <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-113">Summary</h5>

<p>Gets the id of the registered metadata this command is based on.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-IDynamicCommand-DisplayName"></a></p>
<h3 id="displayname-property-2">DisplayName <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-114">Summary</h5>

<p>Gets the display name for the command, or <code class="language-plaintext highlighter-rouge">null</code>
if the display name comes from registered metadata.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-IExecutableCommand"></a></p>
<h2 id="iexecutablecommand-type">IExecutableCommand <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-27">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-115">Summary</h5>

<p>Represents a command that can be invoked.
Enabled status can be set by changing IsEnabled and invoking a <a href="#E-System-ComponentModel-INotifyPropertyChanged-PropertyChanged" title="System.ComponentModel.INotifyPropertyChanged.PropertyChanged"></a> event.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-IExecutableCommand-IsEnabled"></a></p>
<h3 id="isenabled-property-1">IsEnabled <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-116">Summary</h5>

<p>Gets a value indicating wheather this command is enabled, or <code class="language-plaintext highlighter-rouge">null</code>
to determine the enabled state from registered metadata.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-IExecutableCommand-ExecuteCommandAsync-System-Collections-Generic-IReadOnlyDictionary{System-String,System-Object},System-Threading-CancellationToken-"></a></p>
<h3 id="executecommandasynccontextpropertiescancellationtoken-method">ExecuteCommandAsync(contextProperties,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-117">Summary</h5>

<p>Called to invoke the command.</p>

<h5 id="returns-26">Returns</h5>

<p>Task to track the asyncronous call status.</p>

<h5 id="parameters-63">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>contextProperties</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Collections.Generic.IReadOnlyDictionary" title="System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}">System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}</a></td>
      <td>Captured context properties for this command.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>Cancellation token.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-IToggleCommand"></a></p>
<h2 id="itogglecommand-type">IToggleCommand <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-28">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-118">Summary</h5>

<p>Represents a command that implements a togglable pattern.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-IToggleCommand-IsChecked"></a></p>
<h3 id="ischecked-property">IsChecked <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-119">Summary</h5>

<p>Gets a value indicating wheather this command is toggled, or <code class="language-plaintext highlighter-rouge">null</code>
to determine the toggled state from registered metadata.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-IconSettings"></a></p>
<h2 id="iconsettings-type">IconSettings <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-29">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-120">Summary</h5>

<p>Settings for command icons.</p>

<p><a name="F-Microsoft-VisualStudio-Extensibility-Commands-IconSettings-IconAndText"></a></p>
<h3 id="iconandtext-constants">IconAndText <code class="language-plaintext highlighter-rouge">constants</code></h3>

<h5 id="summary-121">Summary</h5>

<p>In a toolbar, an icon and the display name of the command should be shown to represent in the command.</p>

<p><a name="F-Microsoft-VisualStudio-Extensibility-Commands-IconSettings-IconOnly"></a></p>
<h3 id="icononly-constants">IconOnly <code class="language-plaintext highlighter-rouge">constants</code></h3>

<h5 id="summary-122">Summary</h5>

<p>In a toolbar, only the icon should be shown to represent the command. In a menu, only the text will be shown.</p>

<p><a name="F-Microsoft-VisualStudio-Extensibility-Commands-IconSettings-None"></a></p>
<h3 id="none-constants">None <code class="language-plaintext highlighter-rouge">constants</code></h3>

<h5 id="summary-123">Summary</h5>

<p>None.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-KnownCommandPlacement"></a></p>
<h2 id="knowncommandplacement-type">KnownCommandPlacement <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-30">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-124">Summary</h5>

<p>Known locations that a command can be parented to.</p>

<p><a name="F-Microsoft-VisualStudio-Extensibility-Commands-KnownCommandPlacement-ExtensionsMenu"></a></p>
<h3 id="extensionsmenu-constants">ExtensionsMenu <code class="language-plaintext highlighter-rouge">constants</code></h3>

<h5 id="summary-125">Summary</h5>

<p>A group inside of the Extensions top level menu.</p>

<p><a name="F-Microsoft-VisualStudio-Extensibility-Commands-KnownCommandPlacement-None"></a></p>
<h3 id="none-constants-1">None <code class="language-plaintext highlighter-rouge">constants</code></h3>

<h5 id="summary-126">Summary</h5>

<p>The command should not be placed anywhere. It only exists in the command well.</p>

<p><a name="F-Microsoft-VisualStudio-Extensibility-Commands-KnownCommandPlacement-ToolsMenu"></a></p>
<h3 id="toolsmenu-constants">ToolsMenu <code class="language-plaintext highlighter-rouge">constants</code></h3>

<h5 id="summary-127">Summary</h5>

<p>A group inside of the Tools top level menu.</p>

<p><a name="F-Microsoft-VisualStudio-Extensibility-Commands-KnownCommandPlacement-ViewOtherWindowsMenu"></a></p>
<h3 id="viewotherwindowsmenu-constants">ViewOtherWindowsMenu <code class="language-plaintext highlighter-rouge">constants</code></h3>

<h5 id="summary-128">Summary</h5>

<p>A group inside of the View -&gt; Other Windows menu.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Documents-LanguagesExtensibility"></a></p>
<h2 id="languagesextensibility-type">LanguagesExtensibility <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-31">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Documents</p>

<h5 id="summary-129">Summary</h5>

<p>Provides functionality for extending Visual Studio through brokered services for Langauge Services.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-LanguagesExtensibility-#ctor-Microsoft-VisualStudio-Extensibility-ExtensibilityPoint-"></a></p>
<h3 id="ctorextensibilitypoint-constructor">#ctor(extensibilityPoint) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-130">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Documents-LanguagesExtensibility" title="Microsoft.VisualStudio.Extensibility.Documents.LanguagesExtensibility">LanguagesExtensibility</a> class.</p>

<h5 id="parameters-64">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>extensibilityPoint</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-ExtensibilityPoint" title="Microsoft.VisualStudio.Extensibility.ExtensibilityPoint">Microsoft.VisualStudio.Extensibility.ExtensibilityPoint</a></td>
      <td>Another instance of extensibility point object to use for initialization.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-System-Diagnostics-CodeAnalysis-MaybeNullAttribute"></a></p>
<h2 id="maybenullattribute-type">MaybeNullAttribute <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-32">Namespace</h5>

<p>System.Diagnostics.CodeAnalysis</p>

<h5 id="summary-131">Summary</h5>

<p>Specifies that an output may be <code class="language-plaintext highlighter-rouge">null</code> even if the
    corresponding type disallows it.</p>

<p><a name="M-System-Diagnostics-CodeAnalysis-MaybeNullAttribute-#ctor"></a></p>
<h3 id="ctor-constructor-4">#ctor() <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-132">Summary</h5>

<p>Initializes a new instance of the <a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Diagnostics.CodeAnalysis.MaybeNullAttribute" title="System.Diagnostics.CodeAnalysis.MaybeNullAttribute">MaybeNullAttribute</a> class.</p>

<h5 id="parameters-65">Parameters</h5>

<p>This constructor has no parameters.</p>

<p><a name="T-System-Diagnostics-CodeAnalysis-MaybeNullWhenAttribute"></a></p>
<h2 id="maybenullwhenattribute-type">MaybeNullWhenAttribute <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-33">Namespace</h5>

<p>System.Diagnostics.CodeAnalysis</p>

<h5 id="summary-133">Summary</h5>

<p>Specifies that when a method returns <a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue" title="System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">ReturnValue</a>, 
    the parameter may be <code class="language-plaintext highlighter-rouge">null</code> even if the corresponding type disallows it.</p>

<p><a name="M-System-Diagnostics-CodeAnalysis-MaybeNullWhenAttribute-#ctor-System-Boolean-"></a></p>
<h3 id="ctorreturnvalue-constructor">#ctor(returnValue) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-134">Summary</h5>

<p>Initializes the attribute with the specified return value condition.</p>

<h5 id="parameters-66">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>returnValue</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Boolean" title="System.Boolean">System.Boolean</a></td>
      <td>The return value condition.</td>
    </tr>
    <tr>
      <td>If the method returns this value, the associated parameter may be <code class="language-plaintext highlighter-rouge">null</code>.</td>
      <td>Â </td>
      <td>Â </td>
    </tr>
  </tbody>
</table>

<p><a name="P-System-Diagnostics-CodeAnalysis-MaybeNullWhenAttribute-ReturnValue"></a></p>
<h3 id="returnvalue-property">ReturnValue <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-135">Summary</h5>

<p>Gets the return value condition.
    If the method returns this value, the associated parameter may be <code class="language-plaintext highlighter-rouge">null</code>.</p>

<p><a name="T-System-Diagnostics-CodeAnalysis-NotNullAttribute"></a></p>
<h2 id="notnullattribute-type">NotNullAttribute <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-34">Namespace</h5>

<p>System.Diagnostics.CodeAnalysis</p>

<h5 id="summary-136">Summary</h5>

<p>Specifies that an output is not <code class="language-plaintext highlighter-rouge">null</code> even if the
    corresponding type allows it.</p>

<p><a name="M-System-Diagnostics-CodeAnalysis-NotNullAttribute-#ctor"></a></p>
<h3 id="ctor-constructor-5">#ctor() <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-137">Summary</h5>

<p>Initializes a new instance of the <a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Diagnostics.CodeAnalysis.NotNullAttribute" title="System.Diagnostics.CodeAnalysis.NotNullAttribute">NotNullAttribute</a> class.</p>

<h5 id="parameters-67">Parameters</h5>

<p>This constructor has no parameters.</p>

<p><a name="T-System-Diagnostics-CodeAnalysis-NotNullIfNotNullAttribute"></a></p>
<h2 id="notnullifnotnullattribute-type">NotNullIfNotNullAttribute <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-35">Namespace</h5>

<p>System.Diagnostics.CodeAnalysis</p>

<h5 id="summary-138">Summary</h5>

<p>Specifies that the output will be non-<code class="language-plaintext highlighter-rouge">null</code> if the
    named parameter is non-<code class="language-plaintext highlighter-rouge">null</code>.</p>

<p><a name="M-System-Diagnostics-CodeAnalysis-NotNullIfNotNullAttribute-#ctor-System-String-"></a></p>
<h3 id="ctorparametername-constructor">#ctor(parameterName) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-139">Summary</h5>

<p>Initializes the attribute with the associated parameter name.</p>

<h5 id="parameters-68">Parameters</h5>

<p>| Name | Type | Description |
| â- | â- | ââââ |
| parameterName | <a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a> | The associated parameter name.
    The output will be non-<code class="language-plaintext highlighter-rouge">null</code> if the argument to the
    parameter specified is non-<code class="language-plaintext highlighter-rouge">null</code>. |</p>

<p><a name="P-System-Diagnostics-CodeAnalysis-NotNullIfNotNullAttribute-ParameterName"></a></p>
<h3 id="parametername-property">ParameterName <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-140">Summary</h5>

<p>Gets the associated parameter name.
    The output will be non-<code class="language-plaintext highlighter-rouge">null</code> if the argument to the
    parameter specified is non-<code class="language-plaintext highlighter-rouge">null</code>.</p>

<p><a name="T-System-Diagnostics-CodeAnalysis-NotNullWhenAttribute"></a></p>
<h2 id="notnullwhenattribute-type">NotNullWhenAttribute <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-36">Namespace</h5>

<p>System.Diagnostics.CodeAnalysis</p>

<h5 id="summary-141">Summary</h5>

<p>Specifies that when a method returns <a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue" title="System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">ReturnValue</a>,
    the parameter will not be <code class="language-plaintext highlighter-rouge">null</code> even if the corresponding type allows it.</p>

<p><a name="M-System-Diagnostics-CodeAnalysis-NotNullWhenAttribute-#ctor-System-Boolean-"></a></p>
<h3 id="ctorreturnvalue-constructor-1">#ctor(returnValue) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-142">Summary</h5>

<p>Initializes the attribute with the specified return value condition.</p>

<h5 id="parameters-69">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>returnValue</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Boolean" title="System.Boolean">System.Boolean</a></td>
      <td>The return value condition.</td>
    </tr>
    <tr>
      <td>If the method returns this value, the associated parameter will not be <code class="language-plaintext highlighter-rouge">null</code>.</td>
      <td>Â </td>
      <td>Â </td>
    </tr>
  </tbody>
</table>

<p><a name="P-System-Diagnostics-CodeAnalysis-NotNullWhenAttribute-ReturnValue"></a></p>
<h3 id="returnvalue-property-1">ReturnValue <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-143">Summary</h5>

<p>Gets the return value condition.
    If the method returns this value, the associated parameter will not be <code class="language-plaintext highlighter-rouge">null</code>.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Documents-OutputWindow"></a></p>
<h2 id="outputwindow-type">OutputWindow <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-37">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Documents</p>

<h5 id="summary-144">Summary</h5>

<p>Provides functionality to manage an output window channel.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindow-#ctor-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal-"></a></p>
<h3 id="ctoroutputwindow-constructor">#ctor(outputWindow) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-145">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Documents-OutputWindow" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindow">OutputWindow</a> class.</p>

<h5 id="parameters-70">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>outputWindow</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowInternal">Microsoft.VisualStudio.Extensibility.Documents.OutputWindowInternal</a></td>
      <td>Output window instance to wrap.</td>
    </tr>
  </tbody>
</table>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Documents-OutputWindow-Writer"></a></p>
<h3 id="writer-property">Writer <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-146">Summary</h5>

<p>Gets the text writer instance to write to the output channel.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindow-DisposeNativeResources"></a></p>
<h3 id="disposenativeresources-method">DisposeNativeResources() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-147">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-71">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowExtensibility"></a></p>
<h2 id="outputwindowextensibility-type">OutputWindowExtensibility <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-38">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Documents</p>

<h5 id="summary-148">Summary</h5>

<p>Provides functionality for extending Visual Studio through brokered services.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowExtensibility-#ctor-Microsoft-VisualStudio-Extensibility-ExtensibilityPoint-"></a></p>
<h3 id="ctorextensibilitypoint-constructor-1">#ctor(extensibilityPoint) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-149">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowExtensibility" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowExtensibility">OutputWindowExtensibility</a> class.</p>

<h5 id="parameters-72">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>extensibilityPoint</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-ExtensibilityPoint" title="Microsoft.VisualStudio.Extensibility.ExtensibilityPoint">Microsoft.VisualStudio.Extensibility.ExtensibilityPoint</a></td>
      <td>Another instance of extensibility point object to use for initialization.</td>
    </tr>
  </tbody>
</table>

<p><a name="F-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowExtensibility-outputWindowChannels"></a></p>
<h3 id="outputwindowchannels-constants">outputWindowChannels <code class="language-plaintext highlighter-rouge">constants</code></h3>

<h5 id="summary-150">Summary</h5>

<p>Output window channel can only have a single owner but we have cases in extensions where they may want to get the same channel
from different classes with in the extension so we will cache the instances.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowExtensibility-Dispose-System-Boolean-"></a></p>
<h3 id="dispose-method-3">Dispose() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-151">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-73">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowExtensibility-GetChannelAsync-System-String,System-String,System-Threading-CancellationToken-"></a></p>
<h3 id="getchannelasyncidentifierdisplaynameresourceidcancellationtoken-method">GetChannelAsync(identifier,displayNameResourceId,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-152">Summary</h5>

<p>Creates a new output window channel. If a channel exists on the system with the identifier this call will fail.</p>

<h5 id="returns-27">Returns</h5>

<p>an instance of <a href="#T-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowInternal">OutputWindowInternal</a>.</p>

<h5 id="parameters-74">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>identifier</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>Unique channel identifiers.</td>
    </tr>
    <tr>
      <td>displayNameResourceId</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>Resource id to be used as display name for the output window channel. Consider using a pattern like nameof(Resources.MyChannelName).</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>Cancellation token to monitor.</td>
    </tr>
  </tbody>
</table>

<h5 id="exceptions">Exceptions</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.InvalidOperationException" title="System.InvalidOperationException">System.InvalidOperationException</a></td>
      <td>Thrown when output channel is already created in the environment by another component.</td>
    </tr>
  </tbody>
</table>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal"></a></p>
<h2 id="outputwindowinternal-type">OutputWindowInternal <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-39">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Documents</p>

<h5 id="summary-153">Summary</h5>

<p>Provides functionality to manage an output window channel.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal-#ctor-System-String,System-IO-Pipelines-PipeWriter,System-Text-Encoding,Microsoft-VisualStudio-RpcContracts-OutputChannel-IOutputChannelStore,Microsoft-ServiceHub-Framework-IServiceBroker-"></a></p>
<h3 id="ctoridentifierwriterencodingoutputchannelstoreservicebroker-constructor">#ctor(identifier,writer,encoding,outputChannelStore,serviceBroker) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-154">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowInternal">OutputWindowInternal</a> class.</p>

<h5 id="parameters-75">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>identifier</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>Service broker instance to utilize.</td>
    </tr>
    <tr>
      <td>writer</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.IO.Pipelines.PipeWriter" title="System.IO.Pipelines.PipeWriter">System.IO.Pipelines.PipeWriter</a></td>
      <td>Pipe writer instance to use for writing.</td>
    </tr>
    <tr>
      <td>encoding</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Text.Encoding" title="System.Text.Encoding">System.Text.Encoding</a></td>
      <td>Text encoding of the channel.</td>
    </tr>
    <tr>
      <td>outputChannelStore</td>
      <td><a href="#T-Microsoft-VisualStudio-RpcContracts-OutputChannel-IOutputChannelStore" title="Microsoft.VisualStudio.RpcContracts.OutputChannel.IOutputChannelStore">Microsoft.VisualStudio.RpcContracts.OutputChannel.IOutputChannelStore</a></td>
      <td>Output channel store service instance assigned to this channel.</td>
    </tr>
    <tr>
      <td>serviceBroker</td>
      <td><a href="#T-Microsoft-ServiceHub-Framework-IServiceBroker" title="Microsoft.ServiceHub.Framework.IServiceBroker">Microsoft.ServiceHub.Framework.IServiceBroker</a></td>
      <td>Service broker that was used to create the channel store.</td>
    </tr>
  </tbody>
</table>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal-Identifier"></a></p>
<h3 id="identifier-property">Identifier <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-155">Summary</h5>

<p>Gets the output window channel identifier.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal-Writer"></a></p>
<h3 id="writer-property-1">Writer <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-156">Summary</h5>

<p>Gets the text writer instance to write to the output channel.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal-CreateChannelAsync-System-String,System-String,System-Text-Encoding,Microsoft-ServiceHub-Framework-IServiceBroker,Microsoft-VisualStudio-RpcContracts-IStringResourceDictionary,System-Threading-CancellationToken-"></a></p>
<h3 id="createchannelasyncidentifierresourceidencodingservicebrokerstringresourcedictionarycancellationtoken-method">CreateChannelAsync(identifier,resourceId,encoding,serviceBroker,stringResourceDictionary,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-157">Summary</h5>

<p>Creates and initializes an output window channel instance.</p>

<h5 id="returns-28">Returns</h5>

<p>an instance of <a href="#T-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal" title="Microsoft.VisualStudio.Extensibility.Documents.OutputWindowInternal">OutputWindowInternal</a>.</p>

<h5 id="parameters-76">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>identifier</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>Unique channel identifiers.</td>
    </tr>
    <tr>
      <td>resourceId</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.String" title="System.String">System.String</a></td>
      <td>Resource id to be used as display name for the output window channel.</td>
    </tr>
    <tr>
      <td>encoding</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Text.Encoding" title="System.Text.Encoding">System.Text.Encoding</a></td>
      <td>Text encoding.</td>
    </tr>
    <tr>
      <td>serviceBroker</td>
      <td><a href="#T-Microsoft-ServiceHub-Framework-IServiceBroker" title="Microsoft.ServiceHub.Framework.IServiceBroker">Microsoft.ServiceHub.Framework.IServiceBroker</a></td>
      <td>Underlying service broker instance to utilize.</td>
    </tr>
    <tr>
      <td>stringResourceDictionary</td>
      <td><a href="#T-Microsoft-VisualStudio-RpcContracts-IStringResourceDictionary" title="Microsoft.VisualStudio.RpcContracts.IStringResourceDictionary">Microsoft.VisualStudio.RpcContracts.IStringResourceDictionary</a></td>
      <td>Resoruce dictionary instance to use.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>Cancellation token to monitor.</td>
    </tr>
  </tbody>
</table>

<h5 id="exceptions-1">Exceptions</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.InvalidOperationException" title="System.InvalidOperationException">System.InvalidOperationException</a></td>
      <td>Thrown when output channel is already created in the environment.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal-DisposeManagedResources"></a></p>
<h3 id="disposemanagedresources-method">DisposeManagedResources() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-158">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-77">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal-ReleaseReference"></a></p>
<h3 id="releasereference-method">ReleaseReference() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-159">Summary</h5>

<p>Decrement the reference count and dispose the object if ref count is 0 or lower.</p>

<h5 id="parameters-78">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-OutputWindowInternal-TryAddReference"></a></p>
<h3 id="tryaddreference-method">TryAddReference() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-160">Summary</h5>

<p>Increment the reference count before returning a wrapper to a new request.</p>

<h5 id="returns-29">Returns</h5>

<p>If reft count increment was successful.</p>

<h5 id="parameters-79">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Resources"></a></p>
<h2 id="resources-type">Resources <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-40">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility</p>

<h5 id="summary-161">Summary</h5>

<p>A strongly-typed resource class, for looking up localized strings, etc.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Resources-CommandIdAlreadyRegistered"></a></p>
<h3 id="commandidalreadyregistered-property">CommandIdAlreadyRegistered <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-162">Summary</h5>

<p>Looks up a localized string similar to Command ID is already registered..</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Resources-Culture"></a></p>
<h3 id="culture-property">Culture <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-163">Summary</h5>

<p>Overrides the current threadâs CurrentUICulture property for all
  resource lookups using this strongly typed resource class.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Resources-InvalidVersionString"></a></p>
<h3 id="invalidversionstring-property">InvalidVersionString <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-164">Summary</h5>

<p>Looks up a localized string similar to Invalid version identifier..</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Resources-ResourceManager"></a></p>
<h3 id="resourcemanager-property">ResourceManager <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-165">Summary</h5>

<p>Returns the cached ResourceManager instance used by this class.</p>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Resources-UnsupportedDocumentMoniker"></a></p>
<h3 id="unsupporteddocumentmoniker-property">UnsupportedDocumentMoniker <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-166">Summary</h5>

<p>Looks up a localized string similar to Unsupported document moniker..</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Documents-SynchronizedBufferTextWriter"></a></p>
<h2 id="synchronizedbuffertextwriter-type">SynchronizedBufferTextWriter <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-41">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Documents</p>

<h5 id="summary-167">Summary</h5>

<p>Provides functionality to manage an output window channel.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-SynchronizedBufferTextWriter-#ctor-System-IO-Pipelines-PipeWriter,System-Text-Encoding-"></a></p>
<h3 id="ctorpipewriterencoding-constructor">#ctor(pipeWriter,encoding) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-168">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Documents-SynchronizedBufferTextWriter" title="Microsoft.VisualStudio.Extensibility.Documents.SynchronizedBufferTextWriter">SynchronizedBufferTextWriter</a> class.</p>

<h5 id="parameters-80">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>pipeWriter</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.IO.Pipelines.PipeWriter" title="System.IO.Pipelines.PipeWriter">System.IO.Pipelines.PipeWriter</a></td>
      <td>Pipe writer instance.</td>
    </tr>
    <tr>
      <td>encoding</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Text.Encoding" title="System.Text.Encoding">System.Text.Encoding</a></td>
      <td>Encoding for strings.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-SynchronizedBufferTextWriter-Dispose-System-Boolean-"></a></p>
<h3 id="dispose-method-4">Dispose() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-169">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-81">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-SynchronizedBufferTextWriter-Write-System-ReadOnlySpan{System-Char}-"></a></p>
<h3 id="write-method">Write() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-170">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-82">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-SynchronizedBufferTextWriter-WriteLine-System-ReadOnlySpan{System-Char}-"></a></p>
<h3 id="writeline-method">WriteLine() <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-171">Summary</h5>

<p><em>Inherit from parent.</em></p>

<h5 id="parameters-83">Parameters</h5>

<p>This method has no parameters.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Commands-ToggleCommand"></a></p>
<h2 id="togglecommand-type">ToggleCommand <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-42">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Commands</p>

<h5 id="summary-172">Summary</h5>

<p>Provides functionality for extending Visual Studio through brokered services.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Commands-ToggleCommand-#ctor-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility,System-UInt16-"></a></p>
<h3 id="ctorextensibilityid-constructor-1">#ctor(extensibility,id) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-173">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Commands-ToggleCommand" title="Microsoft.VisualStudio.Extensibility.Commands.ToggleCommand">ToggleCommand</a> class.</p>

<h5 id="parameters-84">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>extensibility</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-VisualStudioExtensibility" title="Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility">Microsoft.VisualStudio.Extensibility.VisualStudioExtensibility</a></td>
      <td>Extensibility point to be used for command execution.</td>
    </tr>
    <tr>
      <td>id</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.UInt16" title="System.UInt16">System.UInt16</a></td>
      <td>Command identifier.</td>
    </tr>
  </tbody>
</table>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Commands-ToggleCommand-IsChecked"></a></p>
<h3 id="ischecked-property-1">IsChecked <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-174">Summary</h5>

<p><em>Inherit from parent.</em></p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Documents-ViewsExtensibility"></a></p>
<h2 id="viewsextensibility-type">ViewsExtensibility <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-43">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Documents</p>

<h5 id="summary-175">Summary</h5>

<p>Provides functionality to interact with Visual Studio view management such as output windows, tool windows.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Documents-ViewsExtensibility-#ctor-Microsoft-VisualStudio-Extensibility-ExtensibilityPoint-"></a></p>
<h3 id="ctorextensibilitypoint-constructor-2">#ctor(extensibilityPoint) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-176">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Documents-ViewsExtensibility" title="Microsoft.VisualStudio.Extensibility.Documents.ViewsExtensibility">ViewsExtensibility</a> class.</p>

<h5 id="parameters-85">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>extensibilityPoint</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-ExtensibilityPoint" title="Microsoft.VisualStudio.Extensibility.ExtensibilityPoint">Microsoft.VisualStudio.Extensibility.ExtensibilityPoint</a></td>
      <td>Another instance of extensibility point object to use for initialization.</td>
    </tr>
  </tbody>
</table>

<p><a name="P-Microsoft-VisualStudio-Extensibility-Documents-ViewsExtensibility-Output"></a></p>
<h3 id="output-property">Output <code class="language-plaintext highlighter-rouge">property</code></h3>

<h5 id="summary-177">Summary</h5>

<p>Gets the output window extensibility point.</p>

<p><a name="T-Microsoft-VisualStudio-Extensibility-Workspaces-WorkspacesExtensibility"></a></p>
<h2 id="workspacesextensibility-type">WorkspacesExtensibility <code class="language-plaintext highlighter-rouge">type</code></h2>

<h5 id="namespace-44">Namespace</h5>

<p>Microsoft.VisualStudio.Extensibility.Workspaces</p>

<h5 id="summary-178">Summary</h5>

<p>Provides functionality for extending Visual Studio workspaces.</p>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Workspaces-WorkspacesExtensibility-#ctor-Microsoft-VisualStudio-Extensibility-ExtensibilityPoint-"></a></p>
<h3 id="ctorextensibilitypoint-constructor-3">#ctor(extensibilityPoint) <code class="language-plaintext highlighter-rouge">constructor</code></h3>

<h5 id="summary-179">Summary</h5>

<p>Initializes a new instance of the <a href="#T-Microsoft-VisualStudio-Extensibility-Workspaces-WorkspacesExtensibility" title="Microsoft.VisualStudio.Extensibility.Workspaces.WorkspacesExtensibility">WorkspacesExtensibility</a> class.</p>

<h5 id="parameters-86">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>extensibilityPoint</td>
      <td><a href="#T-Microsoft-VisualStudio-Extensibility-ExtensibilityPoint" title="Microsoft.VisualStudio.Extensibility.ExtensibilityPoint">Microsoft.VisualStudio.Extensibility.ExtensibilityPoint</a></td>
      <td>Another instance of extensibility point object to use for initialization.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Workspaces-WorkspacesExtensibility-QueryProjectsAsync``1-System-Func{Microsoft-VisualStudio-ProjectSystem-Query-IAsyncQueryable{Microsoft-VisualStudio-ProjectSystem-Query-ProjectModel-IProject},Microsoft-VisualStudio-ProjectSystem-Query-IAsyncQueryable{``0}},System-Threading-CancellationToken-"></a></p>
<h3 id="queryprojectsasync1queryfunccancellationtoken-method">QueryProjectsAsync``1(queryFunc,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-180">Summary</h5>

<p>Performs an asynchronous query on project items.</p>

<h5 id="returns-30">Returns</h5>

<p>Results of the project query.</p>

<h5 id="parameters-87">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>queryFunc</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Func" title="System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{Microsoft.VisualStudio.ProjectSystem.Query.ProjectModel.IProject},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{``0}}">System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{Microsoft.VisualStudio.ProjectSystem.Query.ProjectModel.IProject},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{``0}}</a></td>
      <td>Function to prepare query.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>Cancellation token to monitor.</td>
    </tr>
  </tbody>
</table>

<h5 id="generic-types-2">Generic Types</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>T</td>
      <td>Type of the object being queried.</td>
    </tr>
  </tbody>
</table>

<h5 id="exceptions-2">Exceptions</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="#T-Microsoft-VisualStudio-ProjectSystem-Query-QueryExecutionException" title="Microsoft.VisualStudio.ProjectSystem.Query.QueryExecutionException">Microsoft.VisualStudio.ProjectSystem.Query.QueryExecutionException</a></td>
      <td>Thrown when query execution is failed.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Workspaces-WorkspacesExtensibility-QuerySolutionAsync``1-System-Func{Microsoft-VisualStudio-ProjectSystem-Query-IAsyncQueryable{Microsoft-VisualStudio-ProjectSystem-Query-ProjectModel-ISolution},Microsoft-VisualStudio-ProjectSystem-Query-IAsyncQueryable{``0}},System-Threading-CancellationToken-"></a></p>
<h3 id="querysolutionasync1queryfunccancellationtoken-method">QuerySolutionAsync``1(queryFunc,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-181">Summary</h5>

<p>Performs an asynchronous query on solution items.</p>

<h5 id="returns-31">Returns</h5>

<p>Results of the solution query.</p>

<h5 id="parameters-88">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>queryFunc</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Func" title="System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{Microsoft.VisualStudio.ProjectSystem.Query.ProjectModel.ISolution},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{``0}}">System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{Microsoft.VisualStudio.ProjectSystem.Query.ProjectModel.ISolution},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{``0}}</a></td>
      <td>Function to prepare query.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>Cancellation token to monitor.</td>
    </tr>
  </tbody>
</table>

<h5 id="generic-types-3">Generic Types</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>T</td>
      <td>Type of the object being queried.</td>
    </tr>
  </tbody>
</table>

<h5 id="exceptions-3">Exceptions</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="#T-Microsoft-VisualStudio-ProjectSystem-Query-QueryExecutionException" title="Microsoft.VisualStudio.ProjectSystem.Query.QueryExecutionException">Microsoft.VisualStudio.ProjectSystem.Query.QueryExecutionException</a></td>
      <td>Thrown when query execution is failed.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Workspaces-WorkspacesExtensibility-UpdateProjectsAsync``2-System-Func{Microsoft-VisualStudio-ProjectSystem-Query-IAsyncQueryable{Microsoft-VisualStudio-ProjectSystem-Query-ProjectModel-IProject},Microsoft-VisualStudio-ProjectSystem-Query-IAsyncQueryable{``0}},System-Func{Microsoft-VisualStudio-ProjectSystem-Query-IAsyncUpdatable{``0},Microsoft-VisualStudio-ProjectSystem-Query-IAsyncUpdatable{``1}},System-Threading-CancellationToken-"></a></p>
<h3 id="updateprojectsasync2queryfuncupdatefunccancellationtoken-method">UpdateProjectsAsync``2(queryFunc,updateFunc,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-182">Summary</h5>

<p>Performs an asynchronous update on projects hierarchy.</p>

<h5 id="returns-32">Returns</h5>

<p>Results of the solution update actions.</p>

<h5 id="parameters-89">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>queryFunc</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Func" title="System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{Microsoft.VisualStudio.ProjectSystem.Query.ProjectModel.IProject},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{``0}}">System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{Microsoft.VisualStudio.ProjectSystem.Query.ProjectModel.IProject},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{``0}}</a></td>
      <td>Function to select items to update.</td>
    </tr>
    <tr>
      <td>updateFunc</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Func" title="System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncUpdatable{`0},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncUpdatable{`1}}">System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncUpdatable{``0},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncUpdatable{``1}}</a></td>
      <td>Function to update selected items.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>Cancellation token to monitor.</td>
    </tr>
  </tbody>
</table>

<h5 id="generic-types-4">Generic Types</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>TUpdatable</td>
      <td>Type of the object being returned as a result of the query selector.</td>
    </tr>
    <tr>
      <td>TResult</td>
      <td>Type of the object being returned as a result of the update actions.</td>
    </tr>
  </tbody>
</table>

<h5 id="exceptions-4">Exceptions</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="#T-Microsoft-VisualStudio-ProjectSystem-Query-QueryExecutionException" title="Microsoft.VisualStudio.ProjectSystem.Query.QueryExecutionException">Microsoft.VisualStudio.ProjectSystem.Query.QueryExecutionException</a></td>
      <td>Thrown when query execution is failed.</td>
    </tr>
  </tbody>
</table>

<p><a name="M-Microsoft-VisualStudio-Extensibility-Workspaces-WorkspacesExtensibility-UpdateSolutionAsync``2-System-Func{Microsoft-VisualStudio-ProjectSystem-Query-IAsyncQueryable{Microsoft-VisualStudio-ProjectSystem-Query-ProjectModel-ISolution},Microsoft-VisualStudio-ProjectSystem-Query-IAsyncQueryable{``0}},System-Func{Microsoft-VisualStudio-ProjectSystem-Query-IAsyncUpdatable{``0},Microsoft-VisualStudio-ProjectSystem-Query-IAsyncUpdatable{``1}},System-Threading-CancellationToken-"></a></p>
<h3 id="updatesolutionasync2queryfuncupdatefunccancellationtoken-method">UpdateSolutionAsync``2(queryFunc,updateFunc,cancellationToken) <code class="language-plaintext highlighter-rouge">method</code></h3>

<h5 id="summary-183">Summary</h5>

<p>Performs an asynchronous update on solutions hierarchy.</p>

<h5 id="returns-33">Returns</h5>

<p>Results of the solution update actions.</p>

<h5 id="parameters-90">Parameters</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>queryFunc</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Func" title="System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{Microsoft.VisualStudio.ProjectSystem.Query.ProjectModel.ISolution},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{``0}}">System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{Microsoft.VisualStudio.ProjectSystem.Query.ProjectModel.ISolution},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncQueryable{``0}}</a></td>
      <td>Function to select items to update.</td>
    </tr>
    <tr>
      <td>updateFunc</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Func" title="System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncUpdatable{`0},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncUpdatable{`1}}">System.Func{Microsoft.VisualStudio.ProjectSystem.Query.IAsyncUpdatable{``0},Microsoft.VisualStudio.ProjectSystem.Query.IAsyncUpdatable{``1}}</a></td>
      <td>Function to update selected items.</td>
    </tr>
    <tr>
      <td>cancellationToken</td>
      <td><a href="http://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&amp;l=EN-US&amp;k=k:System.Threading.CancellationToken" title="System.Threading.CancellationToken">System.Threading.CancellationToken</a></td>
      <td>Cancellation token to monitor.</td>
    </tr>
  </tbody>
</table>

<h5 id="generic-types-5">Generic Types</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>TUpdatable</td>
      <td>Type of the object being returned as a result of the query selector.</td>
    </tr>
    <tr>
      <td>TResult</td>
      <td>Type of the object being returned as a result of the update actions.</td>
    </tr>
  </tbody>
</table>

<h5 id="exceptions-5">Exceptions</h5>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="#T-Microsoft-VisualStudio-ProjectSystem-Query-QueryExecutionException" title="Microsoft.VisualStudio.ProjectSystem.Query.QueryExecutionException">Microsoft.VisualStudio.ProjectSystem.Query.QueryExecutionException</a></td>
      <td>Thrown when query execution is failed.</td>
    </tr>
  </tbody>
</table>
:ET