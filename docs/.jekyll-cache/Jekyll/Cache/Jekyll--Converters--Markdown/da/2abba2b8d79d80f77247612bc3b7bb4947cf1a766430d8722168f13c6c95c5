I"õ<h1 id="walkthrough-insert-guid-extension-sample">Walkthrough: Insert Guid Extension Sample</h1>

<p>This extension is a simple extension that shows how a command that modifies an open editor window can be quickly added to Visual Studio.</p>

<p>Source code: TBD</p>

<h2 id="command-definition">Command definition</h2>

<p>The extension consist of a single code file that defines a command and its properties starting with class attributes as seen below:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="p">[</span><span class="nf">Command</span><span class="p">(</span>
		<span class="s">"Microsoft.VisualStudio.InsertGuidExtension.InsertGuidCommand"</span><span class="p">,</span>
		<span class="m">1</span><span class="p">,</span>
		<span class="s">"Insert new guid"</span><span class="p">,</span>
		<span class="n">placement</span><span class="p">:</span> <span class="n">KnownCommandPlacement</span><span class="p">.</span><span class="n">ExtensionsMenu</span><span class="p">)]</span>
	<span class="p">[</span><span class="nf">CommandIcon</span><span class="p">(</span><span class="s">"OfficeWebExtension"</span><span class="p">,</span> <span class="n">IconSettings</span><span class="p">.</span><span class="n">IconAndText</span><span class="p">)]</span>
	<span class="p">[</span><span class="nf">CommandVisibleWhen</span><span class="p">(</span><span class="s">"AnyFile"</span><span class="p">,</span> <span class="k">new</span> <span class="kt">string</span><span class="p">[]</span> <span class="p">{</span> <span class="s">"AnyFile"</span> <span class="p">},</span> <span class="k">new</span> <span class="kt">string</span><span class="p">[]</span> <span class="p">{</span> <span class="s">"ClientContext:Shell.ActiveEditorContentType=.+"</span> <span class="p">})]</span>
</code></pre></div></div>

<p>The first <code class="language-plaintext highlighter-rouge">Command</code> attribute registers the command using the unique name <code class="language-plaintext highlighter-rouge">Microsoft.VisualStudio.InsertGuidExtension.InsertGuidCommand</code> and id <code class="language-plaintext highlighter-rouge">1</code>. The command is placed in <code class="language-plaintext highlighter-rouge">Extensions</code> top menu and uses <code class="language-plaintext highlighter-rouge">OfficeWebExtension</code> icon moniker.</p>

<p><code class="language-plaintext highlighter-rouge">CommandVisibleWhen</code> attribute defines when the command is visible in <code class="language-plaintext highlighter-rouge">Extensions</code> menu. You can refer to <a href="">Activation Constraints</a> to learn about different options that you can use to determine command visibility and state. In this case, the command is enabled anytime there is an active editor in the IDE.</p>

<h2 id="getting-the-active-editor-view">Getting the active editor view</h2>

<p>Once user executes the command, SDK will route execution to <code class="language-plaintext highlighter-rouge">ExecuteCommandAsync</code> method. <code class="language-plaintext highlighter-rouge">IClientContext</code> instance contains information about the state of IDE at the time of command execution and can be used in conjuction with <code class="language-plaintext highlighter-rouge">VisualStudioExtensibility</code> object.</p>

<p>In our example, we utilize <code class="language-plaintext highlighter-rouge">GetActiveTextViewAsync</code> method to get the active text view at the time of command execution which includes information about document being open, version of the document and the selection.</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">var</span> <span class="n">textView</span> <span class="p">=</span> <span class="k">await</span> <span class="n">context</span><span class="p">.</span><span class="nf">GetActiveTextViewAsync</span><span class="p">(</span><span class="n">cancellationToken</span><span class="p">);</span>
</code></pre></div></div>
<h2 id="mutating-the-text-in-active-view">Mutating the text in active view</h2>

<p>Once we have the active text view, we can mutate the document attached to the view to replace the selection with a new guid string as below.</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">var</span> <span class="n">document</span> <span class="p">=</span> <span class="k">await</span> <span class="n">textView</span><span class="p">.</span><span class="nf">GetTextDocumentAsync</span><span class="p">(</span><span class="n">cancellationToken</span><span class="p">);</span>
<span class="k">await</span> <span class="k">this</span><span class="p">.</span><span class="n">Extensibility</span><span class="p">.</span><span class="nf">Editor</span><span class="p">().</span><span class="nf">MutateAsync</span><span class="p">(</span>
    <span class="n">m</span> <span class="p">=&gt;</span>
    <span class="p">{</span>
        <span class="kt">var</span> <span class="n">mutator</span> <span class="p">=</span> <span class="n">m</span><span class="p">.</span><span class="nf">GetMutator</span><span class="p">(</span><span class="n">document</span><span class="p">);</span>
        <span class="n">mutator</span><span class="p">.</span><span class="nf">Replace</span><span class="p">(</span><span class="n">textView</span><span class="p">.</span><span class="n">Selection</span><span class="p">.</span><span class="n">Extent</span><span class="p">,</span> <span class="n">newGuidString</span><span class="p">);</span>
    <span class="p">},</span>
    <span class="n">cancellationToken</span><span class="p">);</span>
</code></pre></div></div>

<h2 id="logging-errors">Logging errors</h2>

<p>Each extension part including command sets is assigned a <code class="language-plaintext highlighter-rouge">TraceSource</code> instance that can be utilized to log diagnostic errors. Please see <a href="../Inside_the_SDK/Logging.md">Logging</a> section for more information.</p>
:ET